{"version":3,"sources":["components/misc/LogInSignUp.jsx","components/misc/ProfileBadge.jsx","server.js","actions/alerts.js","actions/types.js","actions/currentUser.js","actions/friendRequest.js","actions/auth.js","components/misc/ProfileButton.jsx","components/misc/Title.jsx","components/misc/DatePicker.jsx","components/misc/TimePicker.jsx","components/group/GroupCard.jsx","components/group/GroupCardsManager.jsx","components/friend/FriendBall.jsx","components/friend/FriendBallsManager.jsx","components/friend/FriendBallsManagerSelect.jsx","components/group/GroupForm.jsx","components/alerts/AlertComponent.jsx","components/alerts/AlertsOverlayComponent.jsx","containers/CardModal.jsx","dateUtils.js","components/group/GroupCreateButton.jsx","containers/ConfirmModal.jsx","components/idea/IdeaCard.jsx","components/idea/IdeaCardManager.jsx","components/idea/IdeaForm.jsx","components/idea/IdeaCreateButton.jsx","components/comment/Comment.jsx","components/comment/AddComment.jsx","components/comment/CommentSection.jsx","components/idea/IdeaContent.jsx","components/idea/IdeaAddToGroupButton.jsx","components/idea/IdeaListForm.jsx","components/vote/VotePanel.jsx","components/vote/VoteOverlay.jsx","components/idea/IdeaCardManagerVote.jsx","components/group/GroupContent.jsx","components/group/GroupPreview.jsx","containers/Panel.jsx","components/group/GroupDesign.jsx","components/activity/kindChoices.js","components/activity/ActivityForm.jsx","components/activity/ActivityContent.jsx","components/activity/ActivityCard.jsx","components/activity/ActivityCreateButton.jsx","components/activity/ActivityColumn.jsx","components/activity/ActivityManagerDND.jsx","components/attachment/AttachmentCard.jsx","components/attachment/AttachmentManager.jsx","components/group/GroupPlanning.jsx","containers/HomePage.jsx","containers/LandingPage.jsx","components/profile/SettingsUser.jsx","components/friend_request/FriendRequestButton.jsx","components/friend_request/RemoveButton.jsx","components/friend_request/FriendUnfriendButtons.jsx","components/friend_request/AcceptRefuseButtons.jsx","components/friend_request/AddButton.jsx","components/friend_request/WaitButton.jsx","components/friend_request/FriendRequestItem.jsx","components/profile/UserProfileManager.jsx","containers/Profile.jsx","containers/GroupDetail.jsx","containers/Settings.jsx","components/auth/AccessFormCard.jsx","components/auth/LoginForm.jsx","components/auth/SignupForm.jsx","containers/NotFound404.jsx","routes.jsx","components/search/SearchBar.jsx","components/search/SearchResult.jsx","containers/PageLayout.jsx","history.js","App.jsx","reducers/utility.js","reducers/auth.js","reducers/alerts.js","reducers/currentUser.js","reducers/friendRequest.js","reducers/index.js","index.jsx","assets/imgs/logo.png"],"names":["LogInSignUp","ButtonGroup","to","Button","variant","Component","ProfileBadge","OverlayTrigger","placement","this","props","overlay","Tooltip","profile","first_name","last_name","username","style","zIndex","Badge","className","pill","server","api","profileAPI","groupAPI","groupCreatorAPI","ideaAPI","voteAPI","unfriendAPI","activityAPI","activityCreatorAPI","addAlert","text","type","error","dispatch","response","Object","entries","data","e","message","k","replace","chr","toUpperCase","v","getCurrentUser","token","localStorage","getItem","headers","Authorization","axios","get","then","res","id","email","getCurrentUserSuccess","catch","getCurrentUserFail","alertActions","addFriendToStore","friend","loadRequests","payload","respondRequest","requestId","senderId","receiverId","status","put","sender","receiver","putFriendRequest","authSuccess","authFail","checkAuthTimeout","expirationTime","setTimeout","authLogout","removeItem","ProfileButton","onClickLogout","preventDefault","logout","history","push","onClickProfile","path","currentUser","dropdownItems","key","name","loading","Dropdown","as","alignRight","backgroundColor","onClick","Image","src","picture","logo","Toggle","split","Menu","map","item","Item","Divider","withRouter","connect","state","authActions","Title","titleStyle","fontFamily","fontSize","textAlign","marginTop","marginBottom","color","MyDatePicker","selected","onChange","date","locale","minDate","dateFormat","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","registerLocale","it","GroupCard","Card","flex","Header","Body","profiles","Footer","creator","date_creation","GroupCardsManager","colProps","xs","sm","md","lg","xl","renderGroupCards","buffer","groups","forEach","group","Col","Row","ProgressBar","striped","now","animated","FriendBall","divStyle","margin","width","imgSize","wordWrap","legendStyle","onSelectClick","newState","setState","selectFriend","selectedClassName","selectable","FriendBallsManager","friends","f","FriendBallsManagerSelect","search","document","getElementById","value","filter","includes","selectedFriends","Form","Control","placeholder","onSubmit","Group","controlId","Label","defaultValue","defaultname","dateStart","setDateStart","dateFinish","setDateFinish","rows","defaultDescription","AlertComponent","alert","Alert","onClose","removeAlert","dismissible","AlertsOverlayComponent","renderAlerts","alerts","children","React","cloneElement","CardModal","Modal","show","onHide","size","centered","header","body","footer","dateToString_or_Null","toLocaleString","day","month","year","stringToDate_or_Null","string","parts","Date","validateDates","first","second","validateDateInBetween","differenceInDays","date1","date2","Math","floor","incrementDate","dateInput","increment","dateFormatTotime","getTime","timeToString_or_Null","time","hour12","hour","minute","stringToTime_or_Null","currentDate","getFullYear","getMonth","getDate","GroupCreateButton","showCreate","deselectFriend","array","index","indexOf","splice","postGroup","description","post","date_start","date_finish","addGroup","handleSubmit","form","currentTarget","prevProps","prevState","ConfirmModal","closeButton","IdeaCard","showUpdate","showModalDelete","editing","showEditFormInModal","putIdea","title","updateIdeaInState","updateIdeaInStore","doesCurrentUserOwnThisIdea","handleDelete","deleteIdea","idea","currentUserActions","IdeaCardManager","renderIdeaCards","ideas","i","IdeaForm","defaultTitle","IdeaCreateButton","addIdeaToState","removeAllAlerts","addIdeaToStore","Comment","kind","currentUserId","deleteComment","fontStyle","datetime","AddComment","addComment","InputGroup","CommentSection","comments","getCommentUrl","commentText","url","commentId","delete","comment","renderComments","IdeaContent","IdeaAddToGroupButton","addIdeaToListNoDuplicates","groupIdeas","userIdeas","checkedIdeas","querySelectorAll","parseInt","length","IdeaListForm","renderCheckBoxes","Check","custom","label","VotePanel","gti","hasCurrentUserVotedThisIdea","userId","votes","Boolean","user","find","vote","group_id","idea_id","ideaCard","VoteOverlay","p","IdeaCardManagerVote","group_to_idea","count","GroupContent","showModalFavIdea","edit","window","scrollTo","addProfileToListNoDuplicates","friendIds","notFriends","concat","onSubmitDelete","deleteGroup","ideaIds","putGroup","err","isCreator","selectFavIdea","checkedIdea","querySelector","putFavIdea","GroupPreview","prefered_idea","Panel","badge","component","GroupDesign","removeIdeaFromGroup","addIdeaIdsListForPutGroup","KIND_CHOICES","GEN","SPO","PER","RIS","VIS","ESC","SVA","ACQ","ActivityForm","defaultKind","keys","choice","setDate","maxDate","setTime","defaultUrl","ActivityContent","activity","putActivity","doesCurrentUserOwnThisActivity","href","ActivityCard","_isMounted","componentDidMount","componentWillUnmount","getCardIcon","updateActivityInState","deleteActivity","removeActivityFromState","activityId","draggableId","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","isDragging","ActivityCreateButton","postActivity","addActivityToState","columnDate","ActivityColumn","column","sortActivityIndexesByTime","droppableId","droppableProps","isDraggingOver","borderColor","activities","ActivityManagerDND","columns","default","actIds","columnOrder","createColumnsFromDates","columnId","compareIndexes","a","b","addActivitiesToColumns","col","act","aId","sort","getActivities","putActivityIndexDate","colKey","updatedActivity","findIndex","oldColumn","newColumn","console","updateActivityIndexesInState","actId","compareTime","a_","b_","colActivities","ca","onDragEnd","result","destination","source","start","finish","startActIds","newStart","finishActIds","newFinish","newActIds","AttachmentCard","removeAttFromState","doesCurrentUserOwnThisAttachment","owner","download","method","responseType","URL","createObjectURL","Blob","link","createElement","setAttribute","appendChild","click","ext","exec","getIcon","AttachmentManager","file","handleFileChange","target","files","form_data","FormData","append","addAttToState","renderCards","attachments","att","display","flexWrap","GroupPlanning","HomePage","getGroups","Container","LandingPage","isAuthenticated","SettingsUser","putCurrentUser","handlePictureChange","accept","FriendRequestButton","receivedRequests","updateRrInState","friendRequests","updateList","listRequests","rr","tableLayout","popover","Popover","Spinner","animation","Content","trigger","friendRequest","friendRequestActions","RemoveButton","FriendUnfriendButtons","sent","received","checkSentReceived","sentRequests","req","isAlreadyFriend","element","sendFriendRequest","sendRequest","acceptOrRefuseFriendRequest","unfriend","removeFriend","removeFriendFromStore","renderFriendButton","WaitButton","AcceptRefuseButtons","compact","AddButton","renderUnfriendButton","renderButtons","disabled","FriendRequestItem","height","fontWeight","UserProfileManager","imageSize","rowStyle","Profile","Promise","resolve","idea_","ideaId","removeIdeaFromState","removeIdeaFromStore","getProfile","match","params","GroupDetail","phase","getGroup","isCurrentUserAPartecipant","getCleanDataForPutGroup","group_","ideasToAdd","Nav","justify","Link","Settings","AccessFormCard","LoginForm","password","onAuth","Feedback","role","aria-hidden","auth","rest_auth","expirationDate","setFullYear","setItem","getCurrentUserActions","SignupForm","password1","password2","NotFound404","undefined","BaseRouter","exact","SearchBar","doSearch","timeout","clearTimeout","getUsers","isEmptyOrSpaces","str","results","renderResults","minWidth","inline","autoComplete","FormControl","PageLayout","navbarStyle","Navbar","expand","Brand","Collapse","createBrowserHistory","App","onTryAutoSignup","updateObject","oldObject","updatedProperties","initialState","authStart","action","authReducer","uuid","alertsReducer","getCurrentUserStart","getCurrentUserLogout","done","pictureUpdate","getCurrentUserReducer","getFriendRequests","sent_requests","received_requests","postFriendRequest","fr","clearFriendRequests","friendRequestReducer","combineReducers","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.e3985bb1.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Button, ButtonGroup } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nclass LogInSignUp extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <ButtonGroup>\r\n          <LinkContainer to=\"/login\">\r\n            <Button variant=\"outline-success\">Log In</Button>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"/register\">\r\n            <Button variant=\"outline-primary\">Sign Up</Button>\r\n          </LinkContainer>\r\n        </ButtonGroup>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogInSignUp;\r\n","import React, { Component } from \"react\";\r\nimport { Badge, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nexport default class ProfileBadge extends Component {\r\n  render() {\r\n    return (\r\n      <OverlayTrigger\r\n        placement={this.props.placement ? this.props.placement : \"top\"}\r\n        overlay={\r\n          <Tooltip>\r\n            {this.props.profile.first_name || this.props.profile.last_name\r\n              ? `${this.props.profile.first_name} ${this.props.profile.last_name}`\r\n              : this.props.profile.username}\r\n          </Tooltip>\r\n        }\r\n      >\r\n        <LinkContainer to={`/profile/${this.props.profile.username}`}>\r\n          <span style={{ zIndex: \"999\" }}>\r\n            <Badge className=\"mr-1\" variant={this.props.variant} pill>\r\n              {this.props.profile.username}\r\n            </Badge>\r\n          </span>\r\n        </LinkContainer>\r\n      </OverlayTrigger>\r\n    );\r\n  }\r\n}\r\n","// export const server = \"http://127.0.0.1:8000\";\r\n// export const server = \"http://192.168.1.2:8000\";\r\n// export const server = \"http://192.168.1.226:8000\";\r\nexport const server = \"https://holpoint.ns0.it\";\r\n\r\nconst rest_auth = server + \"/rest-auth/\";\r\nexport const loginURL = rest_auth + \"login/\";\r\nexport const signupURL = rest_auth + \"registration/\";\r\n\r\nconst api = server + \"/api/\";\r\nexport const profileAPI = api + \"profile/\";\r\nexport const currentUserAPI = api + \"current_user\";\r\nexport const pictureUploadAPI = api + \"pictureupload\";\r\n\r\nexport const groupAPI = api + \"group/\";\r\nexport const groupCreatorAPI = api + \"group_creator/\";\r\nexport const ideaAPI = api + \"idea/\";\r\nexport const commentIdeaAPI = api + \"comment/idea/\";\r\n\r\nexport const voteAPI = api + \"vote/\";\r\nexport const searchAPI = api + \"search/user/\";\r\nexport const friendRequestAPI = api + \"friendrequest/\";\r\nexport const friendRequestListAPI = api + \"friendrequests\";\r\nexport const unfriendAPI = api + \"unfriend/\";\r\n\r\nexport const activityAPI = api + \"group_activity/\";\r\nexport const activityCreatorAPI = api + \"activity_creator/\";\r\nexport const commentActivityAPI = api + \"comment/activity/\";\r\n\r\nexport const attachmentCreateAPI = api + \"attachmentupload/\";\r\nexport const attachmentGetAPI = api + \"attachment/\";\r\nexport const attachmentRemoveAPI = api + \"attachmentremove/\";\r\n\r\nexport const resetPassword = server + \"/reset-password/\";\r\n","import * as actionTypes from \"./types\";\r\n\r\nexport const addAlert = (text, style) => {\r\n  return {\r\n    type: actionTypes.ADD_ALERT,\r\n    text: text,\r\n    style: style\r\n  };\r\n};\r\n\r\nexport const error = error => {\r\n  return dispatch => {\r\n    if (error.response) {\r\n      for (const e of Object.entries(error.response.data)) {\r\n        let message = \"\";\r\n        let k = e[0].replace(/^\\w/, chr => chr.toUpperCase());\r\n        let v = e[1];\r\n        if (k !== \"Non_field_errors\") {\r\n          message += `${k}: ${v}\\n`;\r\n        } else {\r\n          message += `${v}\\n`;\r\n        }\r\n        dispatch(addAlert(message, \"danger\"));\r\n      }\r\n    } else {\r\n      dispatch(addAlert(error.message, \"danger\"));\r\n    }\r\n    return {\r\n      type: actionTypes.ERROR,\r\n      error: error\r\n    };\r\n  };\r\n};\r\n\r\nexport const removeAlert = id => {\r\n  return {\r\n    type: actionTypes.REMOVE_ALERT,\r\n    id: id\r\n  };\r\n};\r\n\r\nexport const removeAllAlerts = () => {\r\n  return {\r\n    type: actionTypes.REMOVE_ALL_ALERTS\r\n  };\r\n};\r\n","// auth\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\n// alerts\r\nexport const ADD_ALERT = \"ADD_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const REMOVE_ALL_ALERTS = \"REMOVE_ALL_ALERTS\";\r\nexport const ERROR = \"ERROR\";\r\n\r\n//current user\r\nexport const GET_CURRENT_USER_START = \"GET_CURRENT_USER_START\";\r\nexport const GET_CURRENT_USER_SUCCESS = \"GET_CURRENT_USER_SUCCESS\";\r\nexport const GET_CURRENT_USER_FAIL = \"GET_CURRENT_USER_FAIL\";\r\nexport const GET_CURRENT_USER_LOGOUT = \"GET_CURRENT_USER_LOGOUT\";\r\nexport const PUT_CURRENT_USER = \"PUT_CURRENT_USER\";\r\nexport const LOADING = \"LOADING\";\r\nexport const DONE = \"DONE\";\r\nexport const ADD_FRIEND_TO_STORE = \"ADD_FRIEND_TO_STORE\";\r\nexport const REMOVE_FRIEND_FROM_STORE = \"REMOVE_FRIEND_FROM_STORE\";\r\nexport const PICTURE_UPDATE = \"PICTURE_UPDATE\";\r\nexport const ADD_IDEA_TO_STORE = \"ADD_IDEA_TO_STORE\";\r\nexport const REMOVE_IDEA_FROM_STORE = \"REMOVE_IDEA_FROM_STORE\";\r\nexport const UPDATE_IDEA_IN_STORE = \"UPDATE_IDEA_IN_STORE\";\r\n\r\n//friend_requests\r\nexport const GET_FRIEND_REQUESTS = \"GET_FRIEND_REQUESTS\";\r\nexport const POST_FRIEND_REQUEST = \"POST_FRIEND_REQUEST\";\r\nexport const PUT_FRIEND_REQUEST = \"PUT_FRIEND_REQUEST\";\r\nexport const CLEAR_FRIEND_REQUESTS = \"CLEAR_FRIEND_REQUESTS\";\r\n","import * as actionTypes from \"./types\";\r\nimport axios from \"axios\";\r\nimport { currentUserAPI, pictureUploadAPI } from \"../server\";\r\n\r\nimport * as alertActions from \"./alerts\";\r\n\r\nexport const getCurrentUserStart = () => {\r\n  return {\r\n    type: actionTypes.GET_CURRENT_USER_START\r\n  };\r\n};\r\n\r\nexport const getCurrentUserSuccess = (id, username, first_name, last_name, email, profile) => {\r\n  return {\r\n    type: actionTypes.GET_CURRENT_USER_SUCCESS,\r\n    id,\r\n    username,\r\n    first_name,\r\n    last_name,\r\n    email,\r\n    profile\r\n  };\r\n};\r\n\r\nexport const getCurrentUserFail = error => {\r\n  return {\r\n    type: actionTypes.GET_CURRENT_USER_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const getCurrentUserLogout = () => {\r\n  return { type: actionTypes.GET_CURRENT_USER_LOGOUT };\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const headers = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    }\r\n  };\r\n  return dispatch => {\r\n    dispatch(getCurrentUserStart());\r\n    return axios\r\n      .get(currentUserAPI, headers)\r\n      .then(res => {\r\n        const { id, username, first_name, last_name, email, profile } = res.data;\r\n        dispatch(getCurrentUserSuccess(id, username, first_name, last_name, email, profile));\r\n      })\r\n      .catch(error => {\r\n        dispatch(getCurrentUserFail(error));\r\n        dispatch(alertActions.error(error));\r\n        return error;\r\n      });\r\n  };\r\n};\r\n\r\nexport const loading = () => {\r\n  return {\r\n    type: actionTypes.LOADING\r\n  };\r\n};\r\n\r\nexport const done = () => {\r\n  return {\r\n    type: actionTypes.DONE\r\n  };\r\n};\r\n\r\nexport const pictureUpdate = data => {\r\n  return {\r\n    type: actionTypes.PICTURE_UPDATE,\r\n    data: data\r\n  };\r\n};\r\n\r\nexport const putCurrentUser = (username, email, first_name, last_name, picture) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  let headers = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    }\r\n  };\r\n  return dispatch => {\r\n    dispatch(loading());\r\n    return axios\r\n      .put(\r\n        currentUserAPI,\r\n        {\r\n          username,\r\n          email,\r\n          first_name,\r\n          last_name\r\n        },\r\n        headers\r\n      )\r\n      .then(res => {\r\n        dispatch({ type: actionTypes.PUT_CURRENT_USER, username, email, first_name, last_name });\r\n        if (picture) {\r\n          let form_data = new FormData();\r\n          form_data.append(\"picture\", picture, picture.name);\r\n          headers = {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n              Authorization: `Token ${token}`\r\n            }\r\n          };\r\n          return axios\r\n            .put(`${pictureUploadAPI}`, form_data, headers)\r\n            .then(res => {\r\n              dispatch(pictureUpdate(res.data));\r\n              dispatch(done());\r\n              dispatch(alertActions.addAlert(\"Informazioni aggiornate con successo!\", \"success\"));\r\n            })\r\n            .catch(error => {\r\n              dispatch(done());\r\n              dispatch(alertActions.error(error));\r\n            });\r\n        } else {\r\n          dispatch(done());\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch(done());\r\n        dispatch(alertActions.error(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const addFriendToStore = friend => {\r\n  return {\r\n    type: actionTypes.ADD_FRIEND_TO_STORE,\r\n    friend: friend\r\n  };\r\n};\r\n\r\nexport const removeFriendFromStore = friend => {\r\n  return {\r\n    type: actionTypes.REMOVE_FRIEND_FROM_STORE,\r\n    friend: friend\r\n  };\r\n};\r\n\r\nexport const addIdeaToStore = idea => {\r\n  return {\r\n    type: actionTypes.ADD_IDEA_TO_STORE,\r\n    idea: idea\r\n  };\r\n};\r\n\r\nexport const removeIdeaFromStore = ideaId => {\r\n  return {\r\n    type: actionTypes.REMOVE_IDEA_FROM_STORE,\r\n    ideaId: ideaId\r\n  };\r\n};\r\n\r\nexport const updateIdeaInStore = idea => {\r\n  return {\r\n    type: actionTypes.UPDATE_IDEA_IN_STORE,\r\n    idea: idea\r\n  };\r\n};\r\n\r\n//export const clearCurrentUser = () => {};\r\n","import { GET_FRIEND_REQUESTS, POST_FRIEND_REQUEST, PUT_FRIEND_REQUEST, CLEAR_FRIEND_REQUESTS } from \"./types\";\r\nimport axios from \"axios\";\r\nimport { friendRequestListAPI, friendRequestAPI } from \"../server\";\r\nimport * as alertActions from \"../actions/alerts\";\r\n\r\nexport const getFriendRequests = data => {\r\n  return {\r\n    type: GET_FRIEND_REQUESTS,\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const postFriendRequest = data => {\r\n  return {\r\n    type: POST_FRIEND_REQUEST,\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const putFriendRequest = requestId => {\r\n  return {\r\n    type: PUT_FRIEND_REQUEST,\r\n    requestId\r\n  };\r\n};\r\n\r\nexport const clearFriendRequests = () => {\r\n  return { type: CLEAR_FRIEND_REQUESTS };\r\n};\r\n\r\nexport const loadRequests = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const headers = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    }\r\n  };\r\n  return dispatch => {\r\n    return axios\r\n      .get(friendRequestListAPI, headers)\r\n      .then(res => {\r\n        dispatch(getFriendRequests(res.data));\r\n      })\r\n      .catch(error => {\r\n        dispatch(alertActions.error(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const sendRequest = (senderId, receiverId) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const headers = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    }\r\n  };\r\n  return dispatch => {\r\n    return axios\r\n      .post(\r\n        friendRequestAPI,\r\n        {\r\n          sender: senderId,\r\n          receiver: receiverId,\r\n          status: \"Pen\"\r\n        },\r\n        headers\r\n      )\r\n      .then(res => {\r\n        dispatch(postFriendRequest(res.data));\r\n      })\r\n      .catch(error => {\r\n        dispatch(alertActions.error(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const respondRequest = (requestId, senderId, receiverId, status) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const headers = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    }\r\n  };\r\n  return dispatch => {\r\n    return axios\r\n      .put(\r\n        `${friendRequestAPI}${requestId}/`,\r\n        {\r\n          sender: senderId,\r\n          receiver: receiverId,\r\n          status: status\r\n        },\r\n        headers\r\n      )\r\n      .then(res => {\r\n        dispatch(putFriendRequest(requestId));\r\n      })\r\n      .catch(error => {\r\n        dispatch(alertActions.error(error));\r\n      });\r\n  };\r\n};\r\n","import * as actionTypes from \"./types\";\r\nimport axios from \"axios\";\r\nimport { loginURL, signupURL } from \"../server\";\r\nimport * as getCurrentUserActions from \"./currentUser\";\r\nimport * as alertActions from \"./alerts\";\r\nimport * as friendRequestActions from \"./friendRequest\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = token => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    token: token,\r\n  };\r\n};\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nconst checkAuthTimeout = expirationTime => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      authLogout();\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nconst headers = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nexport const authLogin = (username, password) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    // we return the promise in order to use wait till the end using \"then\"\r\n    return axios\r\n      .post(\r\n        loginURL,\r\n        {\r\n          username: username,\r\n          password: password,\r\n        },\r\n        headers\r\n      )\r\n      .then(res => {\r\n        const token = res.data.key;\r\n        let expirationDate = new Date();\r\n        expirationDate.setFullYear(expirationDate.getFullYear() + 1);\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        dispatch(authSuccess(token));\r\n        dispatch(getCurrentUserActions.getCurrentUser());\r\n        dispatch(friendRequestActions.loadRequests());\r\n        dispatch(checkAuthTimeout(3600));\r\n      })\r\n      .catch(error => {\r\n        dispatch(authFail(error));\r\n        dispatch(alertActions.error(error));\r\n        return error;\r\n      });\r\n  };\r\n};\r\n\r\nexport const authSignup = (username, email, password1, password2) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    // we return the promise in order to use wait till the end using \"then\"\r\n    return axios\r\n      .post(\r\n        signupURL,\r\n        {\r\n          username: username,\r\n          email: email,\r\n          password1: password1,\r\n          password2: password2,\r\n        },\r\n        headers\r\n      )\r\n      .then(res => {\r\n        const token = res.data.key;\r\n        let expirationDate = new Date();\r\n        expirationDate.setFullYear(expirationDate.getFullYear() + 1);\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        dispatch(authSuccess(token));\r\n        dispatch(getCurrentUserActions.getCurrentUser());\r\n        dispatch(friendRequestActions.loadRequests());\r\n        dispatch(checkAuthTimeout(3600));\r\n      })\r\n      .catch(error => {\r\n        dispatch(authFail(error));\r\n        dispatch(alertActions.error(error));\r\n        return error;\r\n      });\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token === undefined) {\r\n      authLogout();\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        authLogout();\r\n      } else {\r\n        dispatch(authSuccess(token));\r\n        dispatch(getCurrentUserActions.getCurrentUser());\r\n        dispatch(friendRequestActions.loadRequests());\r\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const authLogout = () => {\r\n  return dispatch => {\r\n    dispatch(logout());\r\n    dispatch(getCurrentUserActions.getCurrentUserLogout());\r\n    dispatch(friendRequestActions.clearFriendRequests());\r\n  };\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Dropdown, Button, ButtonGroup, Image } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport logo from \"../../assets/imgs/logo.png\";\r\n\r\nimport * as authActions from \"../../actions/auth\";\r\nimport { connect } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nclass ProfileButton extends Component {\r\n  onClickLogout = e => {\r\n    e.preventDefault();\r\n    this.props.logout();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onClickProfile = e => {\r\n    e.preventDefault();\r\n    const path = `/profile/${this.props.currentUser.username}`;\r\n    this.props.history.push(path);\r\n  };\r\n\r\n  dropdownItems = [{ key: 1, name: \"Impostazioni\", to: \"/settings\" }];\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {!this.props.currentUser.loading && (\r\n          <Dropdown as={ButtonGroup} alignRight>\r\n            <Button\r\n              style={{ backgroundColor: \"var(--holpoint-yellow)\" }}\r\n              variant=\"warning\"\r\n              onClick={this.onClickProfile}\r\n            >\r\n              <Image\r\n                src={this.props.currentUser.profile.picture ? this.props.currentUser.profile.picture : logo}\r\n                className=\"profile-pic-small\"\r\n              />\r\n              {\"   \" + this.props.currentUser.username}\r\n            </Button>\r\n            <Dropdown.Toggle split variant=\"warning\" style={{ backgroundColor: \"var(--holpoint-yellow)\" }} />\r\n            <Dropdown.Menu>\r\n              {this.dropdownItems.map(item => (\r\n                <LinkContainer to={item.to} key={item.key}>\r\n                  <Dropdown.Item>{item.name}</Dropdown.Item>\r\n                </LinkContainer>\r\n              ))}\r\n              <Dropdown.Divider />\r\n              <Dropdown.Item>\r\n                <Button variant=\"outline-danger\" onClick={this.onClickLogout}>\r\n                  Log Out\r\n                </Button>\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.currentUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logout: () => dispatch(authActions.authLogout()),\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProfileButton));\r\n","import React from \"react\";\r\nimport \"../../assets/css/font.css\";\r\n\r\nconst Title = props => {\r\n  const titleStyle = {\r\n    fontFamily: \"'Rancho', cursive\",\r\n    fontSize: props.fontSize,\r\n    textAlign: \"center\",\r\n    marginTop: \"-20px\",\r\n    marginBottom: \"-20px\",\r\n  };\r\n\r\n  const holStyle = {\r\n    color: \"var(--holpoint-blue)\",\r\n  };\r\n\r\n  const pointStyle = {\r\n    color: \"var(--holpoint-red)\",\r\n  };\r\n\r\n  return (\r\n    <div style={titleStyle}>\r\n      <span style={holStyle}>Hol</span>\r\n      <span style={pointStyle}>Point</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport { it } from \"date-fns/locale\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nregisterLocale(\"it\", it);\r\n\r\nexport default function MyDatePicker(props) {\r\n  return (\r\n    <DatePicker\r\n      selected={props.selected}\r\n      onChange={date => props.onChange(date)}\r\n      className=\"form-control\"\r\n      locale=\"it\"\r\n      minDate={props.minDate ? props.minDate : null}\r\n      dateFormat=\"dd/MM/yyyy\"\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport { it } from \"date-fns/locale\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nregisterLocale(\"it\", it);\r\n\r\nexport default function TimePicker(props) {\r\n  return (\r\n    <DatePicker\r\n      className=\"form-control\"\r\n      selected={props.selected}\r\n      onChange={date => props.onChange(date)}\r\n      showTimeSelect\r\n      showTimeSelectOnly\r\n      timeIntervals={15}\r\n      locale=\"it\"\r\n      timeCaption=\"Ora\"\r\n      dateFormat=\"HH:mm\" //24 hour format\r\n    />\r\n  );\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { ProfileBadge } from \"../misc\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass GroupCard extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <LinkContainer to={`/group/${this.props.id}`}>\r\n          <Card className=\"group-card\" style={{ flex: 1 }}>\r\n            <Card.Header>\r\n              <h4>{this.props.name}</h4>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <h6>Partecipanti</h6>\r\n              {this.props.profiles.map(profile => (\r\n                <ProfileBadge key={`${this.props.id}_${profile.id}`} variant=\"primary\" profile={profile} />\r\n              ))}\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <ProfileBadge variant=\"warning\" profile={this.props.creator} />\r\n              <span className=\"float-right\">{this.props.date_creation}</span>\r\n            </Card.Footer>\r\n          </Card>\r\n        </LinkContainer>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GroupCard;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport GroupCard from \"./GroupCard\";\r\nimport { ProgressBar, Row, Col } from \"react-bootstrap\";\r\n\r\nclass GroupCardsManager extends Component {\r\n  colProps = { xs: \"12\", sm: \"12\", md: \"6\", lg: \"4\", xl: \"3\" };\r\n\r\n  renderGroupCards = () => {\r\n    let buffer = [];\r\n    if (!this.props.loading) {\r\n      this.props.groups.forEach(group =>\r\n        buffer.push(\r\n          <Col {...this.colProps} style={{ marginBottom: \"10px\" }} key={group.id}>\r\n            <GroupCard key={group.id} {...group} />\r\n          </Col>\r\n        )\r\n      );\r\n    }\r\n    return <Row>{buffer}</Row>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {this.props.loading ? <ProgressBar striped variant=\"success\" now={100} animated /> : this.renderGroupCards()}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GroupCardsManager;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image } from \"react-bootstrap\";\r\n\r\nimport logo from \"../../assets/imgs/logo.png\";\r\nimport \"./style.css\";\r\n\r\nclass FriendBall extends Component {\r\n  state = {\r\n    selected: false,\r\n  };\r\n\r\n  divStyle = {\r\n    margin: \"10px\",\r\n    width: `${this.imgSize}px`,\r\n    wordWrap: \"break-word\",\r\n    textAlign: \"center\",\r\n  };\r\n\r\n  legendStyle = {\r\n    textAlign: \"center\",\r\n    fontSize: \"15px\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ selected: this.props.selected });\r\n  }\r\n\r\n  onSelectClick = () => {\r\n    const newState = !this.state.selected;\r\n\r\n    this.setState({ selected: newState });\r\n    this.props.selectFriend(this.props.friend.id);\r\n  };\r\n\r\n  render() {\r\n    const selectedClassName = this.state.selected ? \"selected\" : \"\";\r\n    const src = this.props.friend.picture ? this.props.friend.picture : logo;\r\n    return (\r\n      <Fragment>\r\n        <div style={this.divStyle}>\r\n          {this.props.selectable ? (\r\n            <Image\r\n              src={src}\r\n              className={`profile-pic-medium friend-image ${selectedClassName}`}\r\n              onClick={this.onSelectClick}\r\n            />\r\n          ) : (\r\n            <Link to={`/profile/${this.props.friend.username}`}>\r\n              <Image src={src} className={`profile-pic-medium friend-image ${selectedClassName}`} />\r\n            </Link>\r\n          )}\r\n          <legend style={this.legendStyle}>{this.props.friend.username}</legend>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FriendBall;\r\n","import React, { Component } from \"react\";\r\nimport FriendBall from \"./FriendBall\";\r\n\r\nclass FriendBallsManager extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex justify-content-center flex-wrap\">\r\n        {this.props.friends.map(f => (\r\n          <FriendBall key={f.username} friend={f} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FriendBallsManager;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport FriendBall from \"./FriendBall\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nclass FriendBallsManagerSelect extends Component {\r\n  state = {\r\n    friends: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ friends: this.props.friends });\r\n  }\r\n\r\n  search = () => {\r\n    const f = document.getElementById(\"search-friend\").value;\r\n    const friends = this.props.friends.filter(\r\n      friend => friend.username.includes(f) || this.props.selectedFriends.includes(friend.id)\r\n    );\r\n    this.setState({ friends });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Form.Control id=\"search-friend\" type=\"text\" placeholder=\"Cerca per username\" onChange={this.search} />\r\n        <div className=\"d-flex justify-content-center flex-wrap\">\r\n          {this.state.friends.map(f => {\r\n            let selected = this.props.selectedFriends.includes(f.id);\r\n\r\n            return (\r\n              <FriendBall\r\n                key={f.username}\r\n                friend={f}\r\n                selectable={true}\r\n                selectFriend={this.props.selectFriend}\r\n                selected={selected}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FriendBallsManagerSelect;\r\n","import React from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { FriendBallsManagerSelect } from \"../friend\";\r\nimport { connect } from \"react-redux\";\r\nimport { DatePicker } from \"../misc\";\r\n\r\nconst GroupForm = props => {\r\n  return (\r\n    <Form onSubmit={props.onSubmit}>\r\n      <Form.Group controlId=\"name\">\r\n        <Form.Label>Nome gruppo</Form.Label>\r\n        <Form.Control type=\"text\" defaultValue={props.defaultname} />\r\n      </Form.Group>\r\n      <Row>\r\n        <Col>\r\n          <Form.Group controlId=\"date_start\">\r\n            <Form.Label>Data partenza</Form.Label>\r\n            <br />\r\n            <DatePicker selected={props.dateStart} onChange={date => props.setDateStart(date)} />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col>\r\n          <Form.Group controlId=\"date_finish\">\r\n            <Form.Label>Data ritorno</Form.Label>\r\n            <br />\r\n            <DatePicker\r\n              selected={props.dateFinish}\r\n              onChange={date => props.setDateFinish(date)}\r\n              minDate={props.dateStart}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Form.Group controlId=\"description\">\r\n        <Form.Label>Descrizione</Form.Label>\r\n        <Form.Control as=\"textarea\" rows=\"10\" defaultValue={props.defaultDescription} />\r\n      </Form.Group>\r\n      <h3>Aggiungi amici</h3>\r\n      <FriendBallsManagerSelect\r\n        //friends={props.currentUser.profile.friends}\r\n        friends={props.profiles}\r\n        selectFriend={props.selectFriend}\r\n        selectedFriends={props.selectedFriends}\r\n      />\r\n      <Button type=\"submit\">Invia!</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.currentUser,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(GroupForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as alertActions from \"../../actions/alerts\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nclass AlertComponent extends Component {\r\n  render() {\r\n    const { alert } = this.props;\r\n\r\n    return (\r\n      <Alert\r\n        variant={alert.style}\r\n        style={{ marginBottom: \"0\" }}\r\n        key={alert.id}\r\n        onClose={() => this.props.removeAlert(alert.id)}\r\n        dismissible\r\n      >\r\n        {alert.text}\r\n      </Alert>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    removeAlert: id => dispatch(alertActions.removeAlert(id))\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AlertComponent);\r\n","import React, { Component } from \"react\";\r\n\r\nclass AlertsOverlayComponent extends Component {\r\n  renderAlerts = (alerts, children) => {\r\n    return alerts.map(alert => {\r\n      return React.cloneElement(children, { alert: alert, key: alert.id });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    var { alerts, children } = this.props;\r\n    return <div>{this.renderAlerts(alerts, children)}</div>;\r\n  }\r\n}\r\n\r\nexport default AlertsOverlayComponent;\r\n","import React, { Fragment } from \"react\";\r\nimport { Modal, Card, ButtonGroup, Button } from \"react-bootstrap\";\r\nimport { AlertComponent, AlertsOverlayComponent } from \"../components/alerts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Modal.css\";\r\n\r\nclass CardModal extends React.Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          as={Card}\r\n          className={this.props.type}\r\n          show={this.props.show}\r\n          onHide={this.props.onHide}\r\n          size=\"xl\"\r\n          centered\r\n        >\r\n          <Card.Header>\r\n            <Modal.Title>\r\n              {this.props.header}\r\n              <ButtonGroup className=\"float-right\">\r\n                <Button variant=\"warning\" onClick={() => this.props.onHide()}>\r\n                  {\"Chiudi\"}\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Modal.Title>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <AlertsOverlayComponent alerts={this.props.alerts}>\r\n              <AlertComponent />\r\n            </AlertsOverlayComponent>\r\n            {this.props.body}\r\n          </Card.Body>\r\n          {this.props.footer && <Card.Footer>{this.props.footer}</Card.Footer>}\r\n        </Modal>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    alerts: state.alerts\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CardModal);\r\n","export const dateToString_or_Null = date => {\r\n  if (date !== null) {\r\n    const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\r\n    return date.toLocaleString(\"it-IT\", options).split(\",\")[0];\r\n  } else return date;\r\n};\r\n\r\nexport const stringToDate_or_Null = string => {\r\n  if (string === null) return null;\r\n  const parts = string.split(\"/\");\r\n  return new Date(parts[2], parts[1] - 1, parts[0]);\r\n};\r\n\r\nexport const validateDates = (first, second, addAlert) => {\r\n  if (first !== null && second !== null && second < first) {\r\n    addAlert(\"La data di ritorno non può precedere la data di partenza\", \"warning\");\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const validateDateInBetween = (date, first, second, addAlert) => {\r\n  if (date !== null && first !== null && second !== null && first < second && (date < first || date > second)) {\r\n    addAlert(\"La data selezionata non è compresa fra la data di partenza e la data di ritorno\", \"warning\");\r\n    return false;\r\n  } else return true;\r\n};\r\n\r\nexport const differenceInDays = (date1, date2) => {\r\n  return Math.floor((date2 - date1) / (1000 * 60 * 60 * 24)) + 1; // NOTICE: plus one\r\n};\r\n\r\nexport const incrementDate = (dateInput, increment) => {\r\n  var dateFormatTotime = new Date(dateInput);\r\n  var increasedDate = new Date(dateFormatTotime.getTime() + increment * 86400000);\r\n  return increasedDate;\r\n};\r\n\r\nexport const timeToString_or_Null = time => {\r\n  if (time !== null) {\r\n    const options = { hour12: false, hour: \"2-digit\", minute: \"2-digit\" };\r\n    return time.toLocaleString(\"it-IT\", options).split(\",\")[0];\r\n  } else return time;\r\n};\r\n\r\nexport const stringToTime_or_Null = string => {\r\n  if (string === null) return null;\r\n  const parts = string.split(\":\");\r\n  const currentDate = new Date();\r\n  return new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), parts[0], parts[1]);\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport CardModal from \"../../containers/CardModal\";\r\nimport GroupForm from \"./GroupForm\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as alertActions from \"../../actions/alerts\";\r\nimport axios from \"axios\";\r\nimport { groupAPI } from \"../../server\";\r\nimport { dateToString_or_Null, validateDates } from \"../../dateUtils\";\r\n\r\nclass GroupCreateButton extends Component {\r\n  state = {\r\n    showCreate: false,\r\n    selectedFriends: [],\r\n    dateStart: null,\r\n    dateFinish: null\r\n  };\r\n\r\n  setDateStart = date => this.setState({ dateStart: date });\r\n  setDateFinish = date => this.setState({ dateFinish: date });\r\n\r\n  componentDidMount() {\r\n    if (!this.props.currentUser.loading) {\r\n      this.setState({ selectedFriends: [this.props.currentUser.id] });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.currentUser.id !== this.props.currentUser.id) {\r\n      this.setState({ selectedFriends: [...this.state.selectedFriends, this.props.currentUser.id] });\r\n    }\r\n  }\r\n\r\n  deselectFriend = id => {\r\n    var array = [...this.state.selectedFriends];\r\n    var index = array.indexOf(id);\r\n    if (index !== -1) {\r\n      array.splice(index, 1);\r\n      this.setState({ selectedFriends: array });\r\n    }\r\n  };\r\n\r\n  selectFriend = id => {\r\n    if (this.state.selectedFriends.includes(id)) {\r\n      this.deselectFriend(id);\r\n    } else {\r\n      this.setState({ selectedFriends: [...this.state.selectedFriends, id] });\r\n    }\r\n  };\r\n\r\n  showCreate = () => {\r\n    this.setState({ showCreate: !this.state.showCreate });\r\n  };\r\n\r\n  postGroup = (name, description, profiles, dateStart, dateFinish) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    };\r\n    return axios\r\n      .post(\r\n        `${groupAPI}`,\r\n        {\r\n          name,\r\n          description,\r\n          profiles,\r\n          date_start: dateStart,\r\n          date_finish: dateFinish\r\n        },\r\n        headers\r\n      )\r\n      .then(res => {\r\n        this.props.addGroup(res.data);\r\n        this.showCreate();\r\n      })\r\n      .catch(error => {\r\n        this.props.error(error);\r\n      });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const name = form.name.value;\r\n    const description = form.description.value;\r\n    const profiles = this.state.selectedFriends;\r\n    let { dateStart, dateFinish } = this.state;\r\n    if (!validateDates(dateStart, dateFinish, this.props.addAlert)) return;\r\n    dateStart = dateToString_or_Null(dateStart);\r\n    dateFinish = dateToString_or_Null(dateFinish);\r\n    this.postGroup(name, description, profiles, dateStart, dateFinish);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Button variant=\"danger\" onClick={this.showCreate}>\r\n          Crea\r\n        </Button>\r\n        <CardModal\r\n          show={this.state.showCreate}\r\n          onHide={this.showCreate}\r\n          type=\"group-modal\"\r\n          header=\"Crea gruppo\"\r\n          body={\r\n            <GroupForm\r\n              onSubmit={this.handleSubmit}\r\n              selectFriend={this.selectFriend}\r\n              selectedFriends={this.state.selectedFriends}\r\n              profiles={this.props.currentUser.profile.friends}\r\n              dateStart={this.state.dateStart}\r\n              dateFinish={this.state.dateFinish}\r\n              setDateStart={this.setDateStart}\r\n              setDateFinish={this.setDateFinish}\r\n            />\r\n          }\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.currentUser\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    error: error => dispatch(alertActions.error(error)),\r\n    addAlert: (text, style) => dispatch(alertActions.addAlert(text, style))\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GroupCreateButton));\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nexport default class ConfirmModal extends Component {\r\n  render() {\r\n    return (\r\n      <Modal className=\"confirm-modal\" show={this.props.show} onHide={this.props.onHide} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Sei sicuro?</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Button variant=\"danger\" onClick={this.props.onClick}>\r\n            Sicurissimo!\r\n          </Button>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport CardModal from \"../../containers/CardModal\";\r\nimport ConfirmModal from \"../../containers/ConfirmModal\";\r\n\r\nimport \"./style.css\";\r\nimport { IdeaContent } from \".\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as alertActions from \"../../actions/alerts\";\r\nimport * as currentUserActions from \"../../actions/currentUser\";\r\n\r\nimport axios from \"axios\";\r\nimport { ideaAPI } from \"../../server\";\r\nimport { ProfileBadge } from \"../misc\";\r\n\r\nclass IdeaCard extends Component {\r\n  state = {\r\n    showUpdate: false,\r\n    showModalDelete: false,\r\n    editing: false\r\n  };\r\n\r\n  showUpdate = () => {\r\n    this.setState({ showUpdate: !this.state.showUpdate, editing: false });\r\n  };\r\n\r\n  showModalDelete = () => {\r\n    this.setState({ showModalDelete: !this.state.showModalDelete });\r\n  };\r\n\r\n  showEditFormInModal = () => {\r\n    this.setState({ editing: !this.state.editing });\r\n  };\r\n\r\n  // I leave this method in IdeaCard because\r\n  // I need to call this method from everywhere\r\n  putIdea = e => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const title = form.title.value;\r\n    const description = form.description.value;\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    };\r\n\r\n    return axios\r\n      .put(\r\n        `${ideaAPI}${this.props.id}/`,\r\n        {\r\n          title,\r\n          description\r\n        },\r\n        headers\r\n      )\r\n      .then(res => {\r\n        this.props.updateIdeaInState(res.data).then(() => {\r\n          this.props.updateIdeaInStore(res.data);\r\n          this.setState({ editing: false });\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.props.error(error);\r\n      });\r\n  };\r\n\r\n  doesCurrentUserOwnThisIdea = () => {\r\n    if (this.props.creator && this.props.currentUser.id === this.props.creator.id) return true;\r\n    else return false;\r\n  };\r\n\r\n  handleDelete = () => {\r\n    this.props.deleteIdea(this.props.id).then(() => {\r\n      this.setState({ editing: false });\r\n      this.showModalDelete();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Card className=\"idea-card\">\r\n          <Card.Header>\r\n            <h4>\r\n              {this.props.title}\r\n              {this.doesCurrentUserOwnThisIdea() && (\r\n                <Button className=\"float-right\" variant=\"danger\" onClick={this.showModalDelete}>\r\n                  <FaTrashAlt />\r\n                </Button>\r\n              )}\r\n            </h4>\r\n          </Card.Header>\r\n          <Card.Body className=\"card-body\" onClick={this.showUpdate}>\r\n            {this.props.description}\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <ProfileBadge profile={this.props.creator} variant=\"warning\" />\r\n            <span className=\"float-right\">{this.props.date_creation}</span>\r\n          </Card.Footer>\r\n        </Card>\r\n        <CardModal\r\n          show={this.state.showUpdate}\r\n          onHide={this.showUpdate}\r\n          type=\"idea-modal\"\r\n          header={this.props.title}\r\n          body={\r\n            <IdeaContent\r\n              {...this.props}\r\n              doesCurrentUserOwnThisIdea={this.doesCurrentUserOwnThisIdea}\r\n              putIdea={this.putIdea}\r\n              showEditFormInModal={this.showEditFormInModal}\r\n              editing={this.state.editing}\r\n            />\r\n          }\r\n          footer={\r\n            <Fragment>\r\n              <ProfileBadge profile={this.props.creator} variant=\"warning\" />\r\n              <span className=\"float-right\">{this.props.date_creation}</span>\r\n            </Fragment>\r\n          }\r\n        />\r\n        <ConfirmModal show={this.state.showModalDelete} onHide={this.showModalDelete} onClick={this.handleDelete} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.currentUser\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateIdeaInStore: idea => dispatch(currentUserActions.updateIdeaInStore(idea)),\r\n    error: error => dispatch(alertActions.error(error))\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(IdeaCard));\r\n","import React, { Component } from \"react\";\r\nimport IdeaCard from \"./IdeaCard\";\r\n\r\nclass IdeaCardManager extends Component {\r\n  renderIdeaCards = () => {\r\n    let buffer = [];\r\n    const ideas = this.props.ideas;\r\n    if (ideas) {\r\n      ideas.forEach(i =>\r\n        buffer.push(\r\n          <IdeaCard\r\n            key={i.id}\r\n            {...i}\r\n            deleteIdea={this.props.deleteIdea}\r\n            updateIdeaInState={this.props.updateIdeaInState}\r\n          />\r\n        )\r\n      );\r\n    }\r\n    return buffer;\r\n  };\r\n\r\n  render() {\r\n    return <div className=\"overflow-auto\">{this.renderIdeaCards()}</div>;\r\n  }\r\n}\r\n\r\nexport default IdeaCardManager;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nclass IdeaForm extends Component {\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.props.onSubmit}>\r\n        <Form.Group controlId=\"title\">\r\n          <Form.Label>Titolo</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Bellissima vacanza a...\" defaultValue={this.props.defaultTitle} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>Descrizione</Form.Label>\r\n          <Form.Control as=\"textarea\" rows=\"10\" defaultValue={this.props.defaultDescription} />\r\n        </Form.Group>\r\n        <Button variant=\"success\" type=\"submit\">\r\n          Invia\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IdeaForm;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport CardModal from \"../../containers/CardModal\";\r\nimport IdeaForm from \"./IdeaForm\";\r\nimport { ideaAPI } from \"../../server\";\r\nimport axios from \"axios\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as alertActions from \"../../actions/alerts\";\r\nimport * as currentUserActions from \"../../actions/currentUser\";\r\n\r\nclass IdeaCreateButton extends Component {\r\n  state = {\r\n    showCreate: false\r\n  };\r\n\r\n  showCreate = () => {\r\n    this.setState({ showCreate: !this.state.showCreate });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const title = form.title.value;\r\n    const description = form.description.value;\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    };\r\n    return axios\r\n      .post(\r\n        `${ideaAPI}`,\r\n        {\r\n          title,\r\n          description\r\n        },\r\n        headers\r\n      )\r\n      .then(res => {\r\n        this.props.addIdeaToState(res.data).then(() => {\r\n          this.showCreate();\r\n          this.props.removeAllAlerts();\r\n          this.props.addIdeaToStore(res.data);\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.props.error(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Button variant=\"info\" onClick={this.showCreate}>\r\n          Crea\r\n        </Button>\r\n        <CardModal\r\n          show={this.state.showCreate}\r\n          type=\"idea-modal\"\r\n          header=\"Crea idea\"\r\n          onHide={this.showCreate}\r\n          body={<IdeaForm onSubmit={this.handleSubmit} />}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    error: error => dispatch(alertActions.error(error)),\r\n    addIdeaToStore: idea => dispatch(currentUserActions.addIdeaToStore(idea)),\r\n    removeAllAlerts: () => dispatch(alertActions.removeAllAlerts())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(IdeaCreateButton);\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./Comment.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { ProfileBadge } from \"../misc\";\r\n\r\nclass Comment extends Component {\r\n  render() {\r\n    return (\r\n      <div className={`${this.props.kind}-comment`}>\r\n        {this.props.currentUserId === this.props.creator.id && (\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"danger\"\r\n            className=\"float-right\"\r\n            onClick={() => this.props.deleteComment(this.props.id)}\r\n          >\r\n            Elimina\r\n          </Button>\r\n        )}\r\n        <h5>\r\n          <ProfileBadge profile={this.props.creator} variant=\"warning\" />\r\n        </h5>\r\n        <div className=\"text-with-newline\">{this.props.text}</div>\r\n        <div style={{ fontStyle: \"italic\", fontSize: \"10pt\", textAlign: \"right\" }}>{this.props.datetime}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUserId: state.currentUser.id\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Comment);\r\n","import React, { Component } from \"react\";\r\nimport { Button, InputGroup } from \"react-bootstrap\";\r\nimport \"./Comment.css\";\r\n\r\nexport default class AddComment extends Component {\r\n  onClick = () => {\r\n    this.props.addComment(document.getElementById(\"commentText\").value);\r\n    document.getElementById(\"commentText\").value = \"\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={`${this.props.kind}-comment`}>\r\n        <InputGroup className=\"input-group-prepend\">\r\n          <Button variant=\"success\" onClick={this.onClick}>\r\n            Commenta\r\n          </Button>\r\n          <textarea id=\"commentText\" className=\"form-control\" rows=\"3\" />\r\n        </InputGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\nimport Comment from \"./Comment\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as alertActions from \"../../actions/alerts\";\r\nimport { commentIdeaAPI, commentActivityAPI } from \"../../server\";\r\nimport AddComment from \"./AddComment\";\r\n\r\nclass CommentSection extends Component {\r\n  state = {\r\n    comments: [],\r\n    loading: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    };\r\n    const url = this.getCommentUrl();\r\n    return axios\r\n      .get(`${url}${this.props.id}`, headers)\r\n      .then(res => {\r\n        this.setState({ loading: false, comments: res.data });\r\n      })\r\n      .catch(error => {\r\n        this.props.error(error);\r\n      });\r\n  }\r\n\r\n  getCommentUrl = () => {\r\n    switch (this.props.kind) {\r\n      case \"idea\":\r\n        return commentIdeaAPI;\r\n      case \"activity\":\r\n        return commentActivityAPI;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  addComment = commentText => {\r\n    if (commentText === \"\") return;\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    };\r\n    const url = this.getCommentUrl();\r\n    return axios\r\n      .post(\r\n        url,\r\n        {\r\n          text: commentText,\r\n          to: this.props.id\r\n        },\r\n        headers\r\n      )\r\n      .then(res => {\r\n        this.setState({ comments: [...this.state.comments, res.data] });\r\n      })\r\n      .catch(error => {\r\n        this.props.error(error);\r\n      });\r\n  };\r\n\r\n  deleteComment = commentId => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    };\r\n    const url = this.getCommentUrl();\r\n    return axios\r\n      .delete(`${url}${commentId}/`, headers)\r\n      .then(res => {\r\n        this.setState({\r\n          comments: this.state.comments.filter(comment => {\r\n            return comment.id !== commentId;\r\n          })\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.props.error(error);\r\n      });\r\n  };\r\n\r\n  renderComments = () => {\r\n    let buffer = [];\r\n    if (this.state.comments) {\r\n      this.state.comments.forEach(comment =>\r\n        buffer.push(<Comment {...comment} key={comment.id} deleteComment={this.deleteComment} kind={this.props.kind} />)\r\n      );\r\n    }\r\n    return buffer;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <h3>Commenti</h3>\r\n        <AddComment addComment={this.addComment} kind={this.props.kind} />\r\n        {this.state.loading ? (\r\n          <ProgressBar striped variant=\"info\" now={100} animated />\r\n        ) : (\r\n          <div>{this.renderComments()}</div>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    error: error => dispatch(alertActions.error(error))\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(CommentSection);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Button, ButtonGroup } from \"react-bootstrap\";\r\nimport CommentSection from \"../comment/CommentSection\";\r\nimport { IdeaForm } from \"../idea\";\r\n\r\nclass IdeaContent extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {this.props.doesCurrentUserOwnThisIdea() && (\r\n          <ButtonGroup className=\"float-right\">\r\n            <Button variant=\"warning\" onClick={this.props.showEditFormInModal}>\r\n              {this.props.editing ? \"Annulla\" : \"Modifica\"}\r\n            </Button>\r\n          </ButtonGroup>\r\n        )}\r\n        {this.props.editing ? (\r\n          <IdeaForm\r\n            onSubmit={this.props.putIdea}\r\n            defaultTitle={this.props.title}\r\n            defaultDescription={this.props.description}\r\n          />\r\n        ) : (\r\n          <Fragment>\r\n            <h3>Descrizione</h3>\r\n            <div className=\"lead text-with-newline\">{this.props.description}</div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <div style={{ marginTop: \"10px\" }}>\r\n          <CommentSection {...this.props} kind=\"idea\" />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IdeaContent;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport CardModal from \"../../containers/CardModal\";\r\nimport { IdeaListForm } from \".\";\r\nimport { connect } from \"react-redux\";\r\nimport * as alertActions from \"../../actions/alerts\";\r\n\r\nclass IdeaAddToGroupButton extends Component {\r\n  state = {\r\n    showCreate: false,\r\n    ideas: []\r\n  };\r\n\r\n  addIdeaToListNoDuplicates = () => {\r\n    // Show checkbox ony for ideas that are not already in group\r\n    if (!this.props.currentUser.loading) {\r\n      const groupIdeas = this.props.groupIdeas.map(idea => idea.id);\r\n      let userIdeas = this.props.currentUser.profile.ideas;\r\n      userIdeas = userIdeas.filter(idea => !groupIdeas.includes(idea.id));\r\n      this.setState({ ideas: userIdeas });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.addIdeaToListNoDuplicates();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.currentUser.id !== this.props.currentUser.id || prevProps.groupIdeas !== this.props.groupIdeas) {\r\n      this.addIdeaToListNoDuplicates();\r\n    }\r\n  }\r\n\r\n  showCreate = () => {\r\n    this.setState({ showCreate: !this.state.showCreate });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    let checkedIdeas = [...document.querySelectorAll(\"input[name=ideas]:checked\")].map(idea => parseInt(idea.id));\r\n    if (checkedIdeas.length !== 0) {\r\n      this.props.addIdeaToState(checkedIdeas).then(() => {\r\n        this.showCreate();\r\n        this.props.removeAllAlerts();\r\n      });\r\n    } else {\r\n      this.props.addAlert(\"Nessuna idea selezionata\", \"warning\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Button variant=\"info\" onClick={this.showCreate}>\r\n          Aggiungi\r\n        </Button>\r\n        <CardModal\r\n          show={this.state.showCreate}\r\n          type=\"idea-modal\"\r\n          header=\"Aggiungi idea\"\r\n          onHide={this.showCreate}\r\n          body={<IdeaListForm onSubmit={this.handleSubmit} ideas={this.state.ideas} type=\"checkbox\" />}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.currentUser\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addAlert: (text, style) => dispatch(alertActions.addAlert(text, style)),\r\n    removeAllAlerts: () => dispatch(alertActions.removeAllAlerts())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IdeaAddToGroupButton);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nexport default class IdeaListForm extends Component {\r\n  renderCheckBoxes = () => {\r\n    let buffer = [];\r\n    this.props.ideas.forEach(idea => {\r\n      buffer.push(\r\n        <Form.Check\r\n          custom\r\n          style={{ fontSize: \"20px\" }}\r\n          type={this.props.type}\r\n          key={idea.id}\r\n          id={idea.id}\r\n          label={idea.title}\r\n          name=\"ideas\"\r\n        />\r\n      );\r\n    });\r\n    return buffer;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {this.props.ideas.length !== 0 ? (\r\n          <Form onSubmit={this.props.onSubmit}>\r\n            {this.renderCheckBoxes()}\r\n            <Button type=\"submit\" variant=\"success\">\r\n              Invia\r\n            </Button>\r\n          </Form>\r\n        ) : (\r\n          <div style={{ textAlign: \"center\", fontSize: \"30px\" }}>Non ci sono idee :/</div>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as alertActions from \"../../actions/alerts\";\r\nimport { voteAPI } from \"../../server\";\r\nimport { VoteOverlay } from \".\";\r\nimport \"./style.css\";\r\nimport { FaThumbsUp, FaRegThumbsUp } from \"react-icons/fa\";\r\n\r\nclass VotePanel extends Component {\r\n  state = {\r\n    gti: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ gti: this.props.gti });\r\n  }\r\n\r\n  hasCurrentUserVotedThisIdea = () => {\r\n    const userId = this.props.currentUser.id;\r\n    if (this.state.gti.votes) {\r\n      return Boolean(this.state.gti.votes.map(user => user.id).find(id => id === userId));\r\n    } else return false;\r\n  };\r\n\r\n  vote = (group_id, idea_id) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    };\r\n    return axios\r\n      .post(`${voteAPI}${group_id}/${idea_id}`, {}, headers)\r\n      .then(res => {\r\n        this.setState({ gti: res.data });\r\n      })\r\n      .catch(error => {\r\n        this.props.error(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <div className=\"vote-panel\">\r\n          <VoteOverlay votes={this.state.gti.votes}>\r\n            <h4 style={{ margin: \"auto\", textAlign: \"center\" }}>\r\n              Voti: {this.state.gti.votes && this.state.gti.votes.length}\r\n            </h4>\r\n          </VoteOverlay>\r\n\r\n          {this.hasCurrentUserVotedThisIdea() ? (\r\n            <Button\r\n              style={{ width: \"60px\", color: \"white\" }}\r\n              variant=\"success\"\r\n              onClick={() => {\r\n                this.vote(this.state.gti.group, this.state.gti.idea);\r\n              }}\r\n            >\r\n              <FaThumbsUp />\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              style={{ width: \"60px\", color: \"black\", backgroundColor: \"white\" }}\r\n              variant=\"outline-success\"\r\n              onClick={() => {\r\n                this.vote(this.state.gti.group, this.state.gti.idea);\r\n              }}\r\n            >\r\n              <FaRegThumbsUp />\r\n            </Button>\r\n          )}\r\n        </div>\r\n        <div>{this.props.ideaCard}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.currentUser\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    error: error => dispatch(alertActions.error(error))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VotePanel);\r\n","import React, { Component } from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nexport default class VoteOverlay extends Component {\r\n  render() {\r\n    return (\r\n      <OverlayTrigger\r\n        placement=\"top\"\r\n        overlay={\r\n          this.props.votes && (\r\n            <Tooltip>\r\n              {this.props.votes.length > 0 ? (\r\n                this.props.votes.map(p => <div key={p.username}>{p.username}</div>)\r\n              ) : (\r\n                <div>Nessun voto</div>\r\n              )}\r\n            </Tooltip>\r\n          )\r\n        }\r\n      >\r\n        {this.props.children}\r\n      </OverlayTrigger>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport IdeaCard from \"./IdeaCard\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { VotePanel } from \"../vote\";\r\n\r\nclass IdeaCardManagerVote extends Component {\r\n  colProps = { xs: \"12\", sm: \"12\", md: \"6\", lg: \"6\", xl: \"4\" };\r\n\r\n  renderIdeaCards = () => {\r\n    let buffer = [];\r\n    const { ideas, group_to_idea } = this.props;\r\n    if (group_to_idea) {\r\n      group_to_idea.forEach(gti => {\r\n        let i = ideas.find(idea => idea.id === gti.idea);\r\n        buffer.push(\r\n          <Col {...this.colProps} key={i.id}>\r\n            <VotePanel\r\n              count={gti.votes.length}\r\n              gti={gti}\r\n              ideaCard={\r\n                <IdeaCard\r\n                  key={i.id}\r\n                  {...i}\r\n                  deleteIdea={this.props.deleteIdea}\r\n                  updateIdeaInState={this.props.updateIdeaInState}\r\n                />\r\n              }\r\n            />\r\n          </Col>\r\n        );\r\n      });\r\n    }\r\n    return <Row>{buffer}</Row>;\r\n  };\r\n\r\n  render() {\r\n    return this.renderIdeaCards();\r\n  }\r\n}\r\n\r\nexport default IdeaCardManagerVote;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Button, ButtonGroup } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport * as alertActions from \"../../actions/alerts\";\r\nimport { GroupForm, GroupPreview } from \".\";\r\nimport { IdeaListForm } from \"../idea\";\r\nimport ConfirmModal from \"../../containers/ConfirmModal\";\r\nimport CardModal from \"../../containers/CardModal\";\r\n\r\nimport { dateToString_or_Null, validateDates } from \"../../dateUtils\";\r\n\r\nclass GroupContent extends Component {\r\n  state = {\r\n    editing: false,\r\n    showModalDelete: false,\r\n    showModalFavIdea: false,\r\n    profiles: [],\r\n  };\r\n\r\n  showModalDelete = () => {\r\n    this.setState({ showModalDelete: !this.state.showModalDelete });\r\n  };\r\n\r\n  showModalFavIdea = () => {\r\n    this.setState({ showModalFavIdea: !this.state.showModalFavIdea });\r\n  };\r\n\r\n  edit = () => {\r\n    window.scrollTo(0, 0); // scroll top\r\n    this.setState({ editing: !this.state.editing });\r\n  };\r\n\r\n  addProfileToListNoDuplicates = () => {\r\n    if (!this.props.currentUser.loading) {\r\n      let friends = this.props.currentUser.profile.friends;\r\n      let profiles = [];\r\n      if (friends) {\r\n        const friendIds = friends.map(friend => friend.id);\r\n        const notFriends = this.props.profiles.filter(profile => {\r\n          return !friendIds.includes(profile.id);\r\n        });\r\n        profiles = friends.concat(notFriends);\r\n      } else {\r\n        profiles = friends;\r\n      }\r\n      // we should not display creator inside friend balls\r\n      // because he has the privileges to delete the group\r\n      // and no one else should\r\n      profiles = profiles.filter(profile => profile.id !== this.props.creator.id);\r\n      this.setState({ profiles: profiles });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.addProfileToListNoDuplicates();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.currentUser.id !== this.props.currentUser.id) {\r\n      this.addProfileToListNoDuplicates();\r\n    }\r\n  }\r\n\r\n  onSubmitDelete = () => {\r\n    this.props.deleteGroup();\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const name = form.name.value;\r\n    const description = form.description.value;\r\n    const profiles = this.props.selectedFriends;\r\n    let { dateStart, dateFinish } = this.props;\r\n    if (!validateDates(dateStart, dateFinish, this.props.addAlert)) return;\r\n    dateStart = dateToString_or_Null(dateStart);\r\n    dateFinish = dateToString_or_Null(dateFinish);\r\n    const ideaIds = this.props.ideas.map(idea => idea.id);\r\n    this.props.putGroup(name, description, profiles, ideaIds, dateStart, dateFinish).then(err => {\r\n      if (!err) {\r\n        this.setState({ editing: false });\r\n      }\r\n    });\r\n  };\r\n\r\n  isCreator = () => {\r\n    return this.props.currentUser.id === this.props.creator.id;\r\n  };\r\n\r\n  selectFavIdea = e => {\r\n    e.preventDefault();\r\n    let checkedIdea = document.querySelector(\"input[name=ideas]:checked\");\r\n    if (checkedIdea) {\r\n      this.props.putFavIdea(checkedIdea.id).then(() => {\r\n        this.showModalFavIdea();\r\n        this.props.removeAllAlerts();\r\n      });\r\n    } else {\r\n      this.props.addAlert(\"Nessuna idea selezionata\", \"warning\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <ButtonGroup className=\"float-right\">\r\n          <Button variant=\"warning\" onClick={this.edit}>\r\n            {this.state.editing ? \"Annulla\" : \"Modifica\"}\r\n          </Button>\r\n          {this.isCreator() && (\r\n            <Fragment>\r\n              <Button variant=\"success\" onClick={this.showModalFavIdea}>\r\n                Seleziona idea preferita\r\n              </Button>\r\n              <Button variant=\"danger\" onClick={this.showModalDelete}>\r\n                Elimina\r\n              </Button>\r\n            </Fragment>\r\n          )}\r\n        </ButtonGroup>\r\n\r\n        {this.state.editing ? (\r\n          <GroupForm\r\n            onSubmit={this.onSubmit}\r\n            defaultname={this.props.name}\r\n            defaultDescription={this.props.description}\r\n            profiles={this.state.profiles} // concatenation of user friends and users in group (not friends)\r\n            selectFriend={this.props.selectFriend}\r\n            selectedFriends={this.props.selectedFriends}\r\n            dateStart={this.props.dateStart}\r\n            dateFinish={this.props.dateFinish}\r\n            setDateStart={this.props.setDateStart}\r\n            setDateFinish={this.props.setDateFinish}\r\n          />\r\n        ) : (\r\n          <GroupPreview {...this.props} />\r\n        )}\r\n\r\n        <ConfirmModal show={this.state.showModalDelete} onHide={this.showModalDelete} onClick={this.onSubmitDelete} />\r\n        <CardModal\r\n          show={this.state.showModalFavIdea}\r\n          type=\"idea-modal\"\r\n          header=\"Seleziona idea preferita\"\r\n          onHide={this.showModalFavIdea}\r\n          body={<IdeaListForm onSubmit={this.selectFavIdea} ideas={this.props.ideas} type=\"radio\" />}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.currentUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addAlert: (text, style) => dispatch(alertActions.addAlert(text, style)),\r\n    removeAllAlerts: () => dispatch(alertActions.removeAllAlerts()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupContent);\r\n","import React, { Fragment } from \"react\";\r\nimport { ProfileBadge } from \"../misc\";\r\nimport { dateToString_or_Null } from \"../../dateUtils\";\r\nimport { Badge } from \"react-bootstrap\";\r\n\r\nexport default function GroupPreview(props) {\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        Creato da: <ProfileBadge profile={props.creator} variant=\"danger\" placement=\"right\" />\r\n      </div>\r\n      <div>Data partenza: {props.dateStart ? dateToString_or_Null(props.dateStart) : \"non definita\"}</div>\r\n      <div>Data ritorno: {props.dateFinish ? dateToString_or_Null(props.dateFinish) : \"non definita\"}</div>\r\n      <div>\r\n        Partecipanti:{\" \"}\r\n        {props.profiles.map(p => (\r\n          <ProfileBadge profile={p} key={p.id} variant=\"primary\" placement=\"bottom\" />\r\n        ))}\r\n      </div>\r\n      <div>\r\n        Idea preferita:{\" \"}\r\n        <Badge variant=\"success\">{props.prefered_idea ? props.prefered_idea.title : \"non definita\"}</Badge>\r\n      </div>\r\n      <hr />\r\n      <div className=\"text-with-newline lead\">{props.description}</div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Panel extends Component {\r\n  divStyle = {\r\n    marginTop: \"10px\",\r\n    marginBottom: \"20px\"\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={this.divStyle}>\r\n        <h1>\r\n          {this.props.title} {this.props.badge}\r\n        </h1>\r\n        {this.props.component}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Panel;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { IdeaCardManagerVote, IdeaCreateButton, IdeaAddToGroupButton } from \"../idea\";\r\nimport { GroupContent } from \".\";\r\nimport Panel from \"../../containers/Panel\";\r\nimport { ButtonGroup } from \"react-bootstrap\";\r\n\r\nexport default class GroupDesign extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Panel\r\n          title={this.props.group.name}\r\n          component={\r\n            <GroupContent\r\n              {...this.props.group}\r\n              selectFriend={this.props.selectFriend}\r\n              selectedFriends={this.props.selectedFriends}\r\n              putGroup={this.props.putGroup}\r\n              deleteGroup={this.props.deleteGroup}\r\n              dateStart={this.props.dateStart}\r\n              dateFinish={this.props.dateFinish}\r\n              setDateStart={this.props.setDateStart}\r\n              setDateFinish={this.props.setDateFinish}\r\n              putFavIdea={this.props.putFavIdea}\r\n            />\r\n          }\r\n        />\r\n        <Panel\r\n          title=\"Idee proposte\"\r\n          component={\r\n            <IdeaCardManagerVote\r\n              ideas={this.props.group.ideas}\r\n              deleteIdea={this.props.removeIdeaFromGroup}\r\n              updateIdeaInState={this.props.updateIdeaInState}\r\n              group_to_idea={this.props.group.group_to_idea}\r\n            />\r\n          }\r\n          badge={\r\n            <ButtonGroup>\r\n              <IdeaCreateButton addIdeaToState={this.props.addIdeaToState} />\r\n              <IdeaAddToGroupButton\r\n                addIdeaToState={this.props.addIdeaIdsListForPutGroup}\r\n                groupIdeas={this.props.group.ideas}\r\n              />\r\n            </ButtonGroup>\r\n          }\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","export const KIND_CHOICES = {\r\n  GEN: { kind: \"GEN\", name: \"Generico\" },\r\n  SPO: { kind: \"SPO\", name: \"Spostamento\" },\r\n  PER: { kind: \"PER\", name: \"Pernottamento\" },\r\n  RIS: { kind: \"RIS\", name: \"Ristorante\" },\r\n  VIS: { kind: \"VIS\", name: \"Visita\" },\r\n  ESC: { kind: \"ESC\", name: \"Escursione\" },\r\n  SVA: { kind: \"SVA\", name: \"Svago\" },\r\n  ACQ: { kind: \"ACQ\", name: \"Acquisti\" }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { DatePicker, TimePicker } from \"../misc\";\r\nimport { KIND_CHOICES } from \"./kindChoices\";\r\n\r\nexport default class ActivityForm extends Component {\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.props.onSubmit}>\r\n        <Form.Group controlId=\"title\">\r\n          <Form.Label>Titolo</Form.Label>\r\n          <Form.Control type=\"text\" defaultValue={this.props.defaultTitle} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"kind\">\r\n          <Form.Label>Tipo</Form.Label>\r\n          <Form.Control as=\"select\" defaultValue={this.props.defaultKind}>\r\n            {Object.keys(KIND_CHOICES).map(choice => (\r\n              <option key={choice} value={choice}>\r\n                {KIND_CHOICES[choice].name}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"date\">\r\n            <Form.Label>Data</Form.Label>\r\n            <br />\r\n            <DatePicker\r\n              selected={this.props.date}\r\n              onChange={date => this.props.setDate(date)}\r\n              minDate={this.props.dateStart}\r\n              maxDate={this.props.dateFinish} // FIXME: not working, somehow...\r\n            />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"time\">\r\n            <Form.Label>Ora</Form.Label>\r\n            <br />\r\n            <TimePicker selected={this.props.time} onChange={time => this.props.setTime(time)} />\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Group controlId=\"url\">\r\n          <Form.Label>URL</Form.Label>\r\n          <Form.Control type=\"text\" defaultValue={this.props.defaultUrl} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>Descrizione</Form.Label>\r\n          <Form.Control as=\"textarea\" rows=\"10\" defaultValue={this.props.defaultDescription} />\r\n        </Form.Group>\r\n        <Button variant=\"warning\" type=\"submit\">\r\n          Invia\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { ButtonGroup, Button } from \"react-bootstrap\";\r\nimport ActivityForm from \"./ActivityForm\";\r\nimport CommentSection from \"../comment/CommentSection\";\r\nimport { KIND_CHOICES } from \"./kindChoices\";\r\nimport { connect } from \"react-redux\";\r\nimport * as alertActions from \"../../actions/alerts\";\r\nimport {\r\n  dateToString_or_Null,\r\n  timeToString_or_Null,\r\n  stringToDate_or_Null,\r\n  stringToTime_or_Null,\r\n  validateDateInBetween,\r\n} from \"../../dateUtils\";\r\n\r\nclass ActivityContent extends Component {\r\n  state = {\r\n    date: stringToDate_or_Null(this.props.activity.date),\r\n    time: stringToTime_or_Null(this.props.activity.time),\r\n  };\r\n\r\n  setDate = date => this.setState({ date });\r\n  setTime = time => this.setState({ time });\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const title = form.title.value;\r\n    const description = form.description.value;\r\n    const url = form.url.value;\r\n    const kind = form.kind.value;\r\n    let { date, time } = this.state;\r\n    if (!validateDateInBetween(date, this.props.dateStart, this.props.dateFinish, this.props.addAlert)) return;\r\n    date = dateToString_or_Null(date);\r\n    time = timeToString_or_Null(time);\r\n    this.props.putActivity(title, description, url, date, time, kind);\r\n  };\r\n\r\n  render() {\r\n    const activity = this.props.activity;\r\n\r\n    return (\r\n      <Fragment>\r\n        <ButtonGroup className=\"float-right\">\r\n          <Button variant=\"warning\" onClick={this.props.showEditFormInModal}>\r\n            {this.props.editing ? \"Annulla\" : \"Modifica\"}\r\n          </Button>\r\n          {this.props.doesCurrentUserOwnThisActivity() && (\r\n            <Button variant=\"danger\" onClick={this.props.showModalDelete}>\r\n              Elimina\r\n            </Button>\r\n          )}\r\n        </ButtonGroup>\r\n        {this.props.editing ? (\r\n          <ActivityForm\r\n            {...this.props}\r\n            onSubmit={this.handleSubmit}\r\n            date={this.state.date}\r\n            time={this.state.time}\r\n            setDate={this.setDate}\r\n            setTime={this.setTime}\r\n            defaultTitle={activity.title}\r\n            defaultDescription={activity.description}\r\n            defaultUrl={activity.url}\r\n            defaultKind={activity.kind}\r\n          />\r\n        ) : (\r\n          <Fragment>\r\n            <h6>Categoria: {KIND_CHOICES[activity.kind].name}</h6>\r\n            <h6>Data: {activity.date ? activity.date : \"Non definita\"}</h6>\r\n            <h6>Ora: {activity.time ? activity.time : \"Non definita\"}</h6>\r\n            {activity.url && (\r\n              <h6 className=\"activity-url\">\r\n                URL: <a href={activity.url}>{activity.url}</a>\r\n              </h6>\r\n            )}\r\n            {activity.description && (\r\n              <Fragment>\r\n                <h3>Descrizione</h3>\r\n                <div className=\"lead text-with-newline\">{activity.description}</div>\r\n              </Fragment>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n        <CommentSection id={this.props.activity.id} kind=\"activity\" />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addAlert: (text, style) => dispatch(alertActions.addAlert(text, style)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ActivityContent);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport \"./style.css\";\r\nimport { ProfileBadge } from \"../misc\";\r\nimport ActivityContent from \"./ActivityContent\";\r\nimport CardModal from \"../../containers/CardModal\";\r\nimport ConfirmModal from \"../../containers/ConfirmModal\";\r\nimport {\r\n  FaCalendarAlt,\r\n  FaCarAlt,\r\n  FaHome,\r\n  FaUtensils,\r\n  FaUniversity,\r\n  FaMountain,\r\n  FaMusic,\r\n  FaShoppingBag\r\n} from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\nimport * as alertActions from \"../../actions/alerts\";\r\nimport axios from \"axios\";\r\nimport { activityAPI, activityCreatorAPI } from \"../../server\";\r\n\r\nclass ActivityCard extends Component {\r\n  _isMounted = false;\r\n\r\n  state = {\r\n    showUpdate: false,\r\n    showModalDelete: false,\r\n    editing: false\r\n  };\r\n\r\n  showUpdate = () => this._isMounted && this.setState({ showUpdate: !this.state.showUpdate, editing: false });\r\n  showModalDelete = () => this._isMounted && this.setState({ showModalDelete: !this.state.showModalDelete });\r\n  showEditFormInModal = () => this._isMounted && this.setState({ editing: !this.state.editing });\r\n\r\n  componentDidMount = () => (this._isMounted = true);\r\n  componentWillUnmount = () => (this._isMounted = false);\r\n\r\n  getCardIcon = () => {\r\n    switch (this.props.activity.kind) {\r\n      case \"GEN\": // Generico\r\n        return <FaCalendarAlt />;\r\n      case \"SPO\": // Spostamento\r\n        return <FaCarAlt />;\r\n      case \"PER\": // Pernottamento\r\n        return <FaHome />;\r\n      case \"RIS\": // Ristorante\r\n        return <FaUtensils />;\r\n      case \"VIS\": // Visita\r\n        return <FaUniversity />;\r\n      case \"ESC\": // Escursione\r\n        return <FaMountain />;\r\n      case \"SVA\": // Svago\r\n        return <FaMusic />;\r\n      case \"ACQ\": // Acquisti\r\n        return <FaShoppingBag />;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  doesCurrentUserOwnThisActivity = () => {\r\n    if (this.props.activity.creator && this.props.currentUser.id === this.props.activity.creator.id) return true;\r\n    else return false;\r\n  };\r\n\r\n  putActivity = (title, description, url, date, time, kind) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    };\r\n    return axios\r\n      .put(\r\n        `${activityAPI}${this.props.group.id}/${this.props.activity.id}`,\r\n        {\r\n          title,\r\n          description,\r\n          url,\r\n          date,\r\n          time,\r\n          kind\r\n        },\r\n        headers\r\n      )\r\n      .then(res => {\r\n        if (this._isMounted) {\r\n          this.props.updateActivityInState(res.data);\r\n          this.showEditFormInModal();\r\n        }\r\n      })\r\n      .catch(error => this.props.error(error));\r\n  };\r\n\r\n  deleteActivity = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    };\r\n    return axios\r\n      .delete(`${activityCreatorAPI}${this.props.activity.id}/`, headers)\r\n      .then(res => {\r\n        if (this._isMounted) {\r\n          this.props.removeActivityFromState(this.props.activity.id);\r\n          // modal disappears on delete\r\n          // no need to call \"setState\"\r\n        }\r\n      })\r\n      .catch(error => this.props.error(error));\r\n  };\r\n\r\n  render() {\r\n    const activity = this.props.activity;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Draggable key={this.props.activityId} draggableId={this.props.activity.id} index={this.props.index}>\r\n          {(provided, snapshot) => (\r\n            <Fragment>\r\n              <Card\r\n                onClick={this.showUpdate}\r\n                className=\"activity-card mb-2\"\r\n                {...provided.draggableProps}\r\n                {...provided.dragHandleProps}\r\n                ref={provided.innerRef}\r\n                style={{\r\n                  backgroundColor: snapshot.isDragging ? \"var(--holpoint-yellow)\" : \"var(--holpoint-green)\",\r\n                  ...provided.draggableProps.style\r\n                }}\r\n              >\r\n                <Card.Header>\r\n                  {this.getCardIcon()}\r\n                  <span className=\"float-right\">{activity.title}</span>\r\n                </Card.Header>\r\n                <Card.Footer>\r\n                  <ProfileBadge profile={activity.creator} variant=\"danger\" />\r\n                  <span className=\"float-right\">{activity.time || \"N/D\"}</span>\r\n                </Card.Footer>\r\n              </Card>\r\n              <CardModal\r\n                show={this.state.showUpdate}\r\n                onHide={this.showUpdate}\r\n                type=\"activity-modal\"\r\n                header={\r\n                  <Fragment>\r\n                    {this.getCardIcon()}\r\n                    <span className=\"ml-3\">{activity.title}</span>\r\n                  </Fragment>\r\n                }\r\n                body={\r\n                  <ActivityContent\r\n                    {...this.props}\r\n                    doesCurrentUserOwnThisActivity={this.doesCurrentUserOwnThisActivity}\r\n                    putActivity={this.putActivity}\r\n                    showEditFormInModal={this.showEditFormInModal}\r\n                    showModalDelete={this.showModalDelete}\r\n                    editing={this.state.editing}\r\n                  />\r\n                }\r\n                footer={\r\n                  <Fragment>\r\n                    <ProfileBadge profile={this.props.activity.creator} variant=\"danger\" />\r\n                    <span className=\"float-right\">{this.props.activity.date}</span>\r\n                  </Fragment>\r\n                }\r\n              />\r\n            </Fragment>\r\n          )}\r\n        </Draggable>\r\n        <ConfirmModal show={this.state.showModalDelete} onHide={this.showModalDelete} onClick={this.deleteActivity} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.currentUser\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    error: error => dispatch(alertActions.error(error))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityCard);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport CardModal from \"../../containers/CardModal\";\r\n\r\nimport axios from \"axios\";\r\nimport { activityCreatorAPI } from \"../../server\";\r\nimport { dateToString_or_Null, timeToString_or_Null, validateDateInBetween } from \"../../dateUtils\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as alertActions from \"../../actions/alerts\";\r\nimport ActivityForm from \"./ActivityForm\";\r\n\r\nclass ActivityCreateButton extends Component {\r\n  state = {\r\n    showCreate: false,\r\n    date: null,\r\n    time: null,\r\n  };\r\n\r\n  showCreate = () => this.setState({ showCreate: !this.state.showCreate });\r\n  setDate = date => this.setState({ date });\r\n  setTime = time => this.setState({ time });\r\n\r\n  componentDidMount() {\r\n    if (this.props.columnDate) this.setState({ date: this.props.columnDate });\r\n  }\r\n\r\n  postActivity = (title, description, url, date, time, kind) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`,\r\n      },\r\n    };\r\n    return axios\r\n      .post(\r\n        activityCreatorAPI,\r\n        {\r\n          group: this.props.group.id,\r\n          title,\r\n          description,\r\n          url,\r\n          date,\r\n          time,\r\n          kind,\r\n        },\r\n        headers\r\n      )\r\n      .then(res => {\r\n        this.props.addActivityToState(res.data);\r\n        this.showCreate();\r\n      })\r\n      .catch(error => this.props.error(error));\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const title = form.title.value;\r\n    const description = form.description.value;\r\n    const url = form.url.value;\r\n    const kind = form.kind.value;\r\n    let { date, time } = this.state;\r\n    if (!validateDateInBetween(date, this.props.dateStart, this.props.dateFinish, this.props.addAlert)) return;\r\n    date = dateToString_or_Null(date);\r\n    time = timeToString_or_Null(time);\r\n    this.postActivity(title, description, url, date, time, kind);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Button\r\n          variant=\"plain\"\r\n          style={{ backgroundColor: \"var(--holpoint-green)\", color: \"white\" }}\r\n          onClick={this.showCreate}\r\n          size={this.props.size}\r\n          className={this.props.className}\r\n        >\r\n          Crea\r\n        </Button>\r\n        <CardModal\r\n          show={this.state.showCreate}\r\n          type=\"activity-modal\"\r\n          header=\"Crea Attività\"\r\n          onHide={this.showCreate}\r\n          body={\r\n            <ActivityForm\r\n              onSubmit={this.handleSubmit}\r\n              date={this.state.date}\r\n              time={this.state.time}\r\n              setDate={this.setDate}\r\n              setTime={this.setTime}\r\n              dateStart={this.props.dateStart}\r\n              dateFinish={this.props.dateFinish}\r\n            />\r\n          }\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    error: error => dispatch(alertActions.error(error)),\r\n    addAlert: (text, style) => dispatch(alertActions.addAlert(text, style)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ActivityCreateButton);\r\n","import React, { Component } from \"react\";\r\nimport ActivityCard from \"./ActivityCard\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport ActivityCreateButton from \"./ActivityCreateButton\";\r\nimport { stringToDate_or_Null } from \"../../dateUtils\";\r\nimport { ButtonGroup, Button } from \"react-bootstrap\";\r\nimport { FaClock } from \"react-icons/fa\";\r\n\r\nexport default class ActivityColumn extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div className=\"title\">\r\n            {this.props.column.title}\r\n            {this.props.column.id !== \"default\" && (\r\n              <ButtonGroup className=\"float-right\">\r\n                <Button\r\n                  variant=\"info\"\r\n                  size=\"sm\"\r\n                  onClick={() => this.props.sortActivityIndexesByTime(this.props.column)}\r\n                >\r\n                  <FaClock />\r\n                </Button>\r\n                <ActivityCreateButton\r\n                  size=\"sm\"\r\n                  columnDate={stringToDate_or_Null(this.props.column.title)}\r\n                  group={this.props.group}\r\n                  addActivityToState={this.props.addActivityToState}\r\n                  dateStart={this.props.dateStart}\r\n                  dateFinish={this.props.dateFinish}\r\n                />\r\n              </ButtonGroup>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <Droppable droppableId={this.props.column.id}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              className=\"column\"\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n              style={{\r\n                backgroundColor: snapshot.isDraggingOver ? \"var(--holpoint-red)\" : \"var(--holpoint-light-green)\",\r\n                borderColor: snapshot.isDraggingOver ? \"var(--holpoint-dark-red)\" : \"var(--holpoint-green)\"\r\n              }}\r\n            >\r\n              {this.props.activities.map((activity, index) => (\r\n                <ActivityCard\r\n                  key={activity.id}\r\n                  activity={activity}\r\n                  group={this.props.group}\r\n                  index={index}\r\n                  updateActivityInState={this.props.updateActivityInState}\r\n                  removeActivityFromState={this.props.removeActivityFromState}\r\n                  dateStart={this.props.dateStart}\r\n                  dateFinish={this.props.dateFinish}\r\n                />\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\nimport \"./style.css\";\r\nimport ActivityColumn from \"./ActivityColumn\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\n\r\nimport axios from \"axios\";\r\nimport { activityAPI } from \"../../server\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as alertActions from \"../../actions/alerts\";\r\n\r\nimport { differenceInDays, incrementDate, dateToString_or_Null, stringToTime_or_Null } from \"../../dateUtils\";\r\nimport ActivityCreateButton from \"./ActivityCreateButton\";\r\n\r\nclass ActivityManagerDND extends Component {\r\n  state = {\r\n    loading: true,\r\n    activities: [],\r\n    columns: {\r\n      default: {\r\n        id: \"default\",\r\n        title: \"Non assegnate\",\r\n        actIds: []\r\n      }\r\n    },\r\n    columnOrder: [\"default\"]\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getActivities().then(() => this.setState({ loading: false }));\r\n  }\r\n\r\n  /* Given start and finish date,\r\n  creates columns and returns them.\r\n  Does not set them in state*/\r\n  createColumnsFromDates = (dateStart, dateFinish) => {\r\n    let { columns, columnOrder } = this.state;\r\n    for (let i = 0; i < differenceInDays(dateStart, dateFinish); i++) {\r\n      let columnId = dateToString_or_Null(incrementDate(dateStart, i));\r\n      columns[columnId] = {\r\n        id: columnId,\r\n        title: columnId,\r\n        actIds: []\r\n      };\r\n      columnOrder.push(columnId);\r\n    }\r\n    this.setState({ columnOrder });\r\n    return columns;\r\n  };\r\n\r\n  compareIndexes = (a, b) => {\r\n    if (a.index > b.index) return 1;\r\n    if (b.index > a.index) return -1;\r\n    return 0;\r\n  };\r\n\r\n  /* Takes list of activities and all columns.\r\n  Pushes activity ids to column.actIds, only if not already there.\r\n  Then, sorts each column on activity.index property (from lower to higher).\r\n  Returns all the columns updated */\r\n  addActivitiesToColumns = (activities, columns) => {\r\n    activities.forEach(act => {\r\n      // for each activity, put its id into the corresponding column\r\n      if (act.date in columns) {\r\n        !columns[act.date].actIds.includes(act.id) && columns[act.date].actIds.push(act.id);\r\n      } else {\r\n        !columns[\"default\"].actIds.includes(act.id) && columns[\"default\"].actIds.push(act.id);\r\n      }\r\n    });\r\n    for (let col in columns) {\r\n      // for each column, sort activities by index\r\n      columns[col].actIds = columns[col].actIds.map(aId => activities.find(act => act.id === aId));\r\n      columns[col].actIds.sort(this.compareIndexes);\r\n      // then list only activity.id\r\n      columns[col].actIds = columns[col].actIds.map(a => a.id);\r\n    }\r\n    return columns;\r\n  };\r\n\r\n  getActivities = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    };\r\n    return axios\r\n      .get(`${activityAPI}${this.props.group.id}/0`, headers)\r\n      .then(res => {\r\n        const { dateStart, dateFinish } = this.props;\r\n        let columns = this.createColumnsFromDates(dateStart, dateFinish, res.data);\r\n        columns = this.addActivitiesToColumns(res.data, columns);\r\n        this.setState({ activities: res.data, columns });\r\n      })\r\n      .catch(error => this.props.error(error));\r\n  };\r\n\r\n  putActivityIndexDate = activity => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    };\r\n    return axios\r\n      .put(\r\n        `${activityAPI}${this.props.group.id}/${activity.id}`,\r\n        { index: activity.index, date: activity.date },\r\n        headers\r\n      )\r\n      .catch(error => this.props.error(error));\r\n  };\r\n\r\n  addActivityToState = activity => {\r\n    const activities = [...this.state.activities, activity];\r\n    let columns = this.state.columns;\r\n    columns = this.addActivitiesToColumns(activities, columns);\r\n    this.setState({ activities, columns });\r\n  };\r\n\r\n  removeActivityFromState = activityId => {\r\n    const activities = this.state.activities.filter(act => act.id !== activityId);\r\n    const columns = this.state.columns;\r\n    for (let colKey in columns) {\r\n      const index = columns[colKey].actIds.indexOf(activityId);\r\n      if (index > -1) {\r\n        columns[colKey].actIds.splice(index, 1);\r\n        break;\r\n      }\r\n    }\r\n    this.setState({ activities, columns });\r\n  };\r\n\r\n  updateActivityInState = updatedActivity => {\r\n    const { activities, columns } = this.state;\r\n    let index = activities.findIndex(act => act.id === updatedActivity.id);\r\n    let oldColumn = \"default\";\r\n    if (index > -1) {\r\n      oldColumn = activities[index].date ? activities[index].date : \"default\";\r\n      activities[index] = updatedActivity;\r\n    } else {\r\n      console.error(\"Activity not found.\");\r\n      return;\r\n    }\r\n    const newColumn = updatedActivity.date ? updatedActivity.date : \"default\";\r\n    if (newColumn !== oldColumn) {\r\n      index = columns[oldColumn].actIds.indexOf(updatedActivity.id);\r\n      columns[oldColumn].actIds.splice(index, 1);\r\n      columns[newColumn].actIds.push(updatedActivity.id);\r\n    }\r\n    this.setState({ activities, columns });\r\n  };\r\n\r\n  /* Takes a column and for each actIds, updates the corresponding in\r\n  this.state.activities index property, according to actIds position\r\n  (i.e. index in forEach loop) */\r\n  updateActivityIndexesInState = column => {\r\n    let activities = [...this.state.activities];\r\n    column.actIds.forEach((actId, index) => {\r\n      let i = activities.findIndex(a => a.id === actId);\r\n      // if activities[i] exists AND (new index is different OR new column is different), then...\r\n      if (i > -1 && (activities[i].index !== index || activities[i].date !== column.id)) {\r\n        activities[i].index = index;\r\n        activities[i].date = column.id !== \"default\" ? column.id : null;\r\n        this.putActivityIndexDate(activities[i]);\r\n      }\r\n    });\r\n    this.setState({ activities });\r\n  };\r\n\r\n  compareTime = (a, b) => {\r\n    const a_ = stringToTime_or_Null(a.time);\r\n    const b_ = stringToTime_or_Null(b.time);\r\n    if (a_ > b_) return 1;\r\n    if (b_ > a_) return -1;\r\n    return 0;\r\n  };\r\n\r\n  sortActivityIndexesByTime = column => {\r\n    let colActivities = column.actIds.map(actId => this.state.activities.find(a => a.id === actId));\r\n    colActivities.sort(this.compareTime);\r\n    column.actIds = colActivities.map(ca => ca.id);\r\n    this.updateActivityIndexesInState(column);\r\n    this.setState({\r\n      columns: {\r\n        ...this.state.columns,\r\n        [column.id]: column\r\n      }\r\n    });\r\n  };\r\n\r\n  onDragEnd = result => {\r\n    const { destination, source, draggableId } = result;\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n      return;\r\n    }\r\n\r\n    const start = this.state.columns[source.droppableId];\r\n    const finish = this.state.columns[destination.droppableId];\r\n    if (start === finish) {\r\n      const newActIds = [...start.actIds];\r\n      newActIds.splice(source.index, 1);\r\n      newActIds.splice(destination.index, 0, draggableId);\r\n      const newColumn = { ...start, actIds: newActIds };\r\n      this.updateActivityIndexesInState(newColumn);\r\n      const newState = { ...this.state, columns: { ...this.state.columns, [newColumn.id]: newColumn } };\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    //moving from one column to another\r\n    const startActIds = [...start.actIds];\r\n    startActIds.splice(source.index, 1);\r\n    const newStart = { ...start, actIds: startActIds };\r\n    this.updateActivityIndexesInState(newStart);\r\n\r\n    const finishActIds = [...finish.actIds];\r\n    finishActIds.splice(destination.index, 0, draggableId);\r\n    const newFinish = { ...finish, actIds: finishActIds };\r\n    this.updateActivityIndexesInState(newFinish);\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [newStart.id]: newStart,\r\n        [newFinish.id]: newFinish\r\n      }\r\n    };\r\n    this.setState(newState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginTop: \"10px\", marginBottom: \"20px\" }}>\r\n        <h1>\r\n          {\"Attività\"}{\" \"}\r\n          <ActivityCreateButton\r\n            group={this.props.group}\r\n            addActivityToState={this.addActivityToState}\r\n            dateStart={this.props.dateStart}\r\n            dateFinish={this.props.dateFinish}\r\n          />\r\n        </h1>\r\n        {this.state.loading ? (\r\n          <ProgressBar striped variant=\"success\" now={100} animated />\r\n        ) : (\r\n          <DragDropContext onDragEnd={this.onDragEnd}>\r\n            <div className=\"hs noselect\">\r\n              {this.state.columnOrder.map(columnId => {\r\n                const column = this.state.columns[columnId];\r\n                const activities = column.actIds.map(activityId =>\r\n                  this.state.activities.find(activity => activity.id === activityId)\r\n                );\r\n                return (\r\n                  <ActivityColumn\r\n                    key={column.id}\r\n                    column={column}\r\n                    activities={activities}\r\n                    addActivityToState={this.addActivityToState}\r\n                    updateActivityInState={this.updateActivityInState}\r\n                    removeActivityFromState={this.removeActivityFromState}\r\n                    group={this.props.group}\r\n                    dateStart={this.props.dateStart}\r\n                    dateFinish={this.props.dateFinish}\r\n                    sortActivityIndexesByTime={this.sortActivityIndexesByTime}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </DragDropContext>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    error: error => dispatch(alertActions.error(error))\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ActivityManagerDND);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { attachmentGetAPI, attachmentRemoveAPI } from \"../../server\";\r\nimport \"./style.css\";\r\nimport { FaFileWord, FaFileExcel, FaFilePowerpoint, FaFilePdf, FaImage, FaFile, FaTimes } from \"react-icons/fa\";\r\nimport ConfirmModal from \"../../containers/ConfirmModal\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as alertActions from \"../../actions/alerts\";\r\n\r\nconst getIcon = name => {\r\n  const re = /(?:\\.([^.]+))?$/;\r\n  const ext = re.exec(name)[1];\r\n\r\n  if ([\"doc\", \"docx\"].indexOf(ext) >= 0) return <FaFileWord />;\r\n  if ([\"xls\", \"xlsx\"].indexOf(ext) >= 0) return <FaFileExcel />;\r\n  if ([\"ppt\", \"pptx\"].indexOf(ext) >= 0) return <FaFilePowerpoint />;\r\n  if ([\"jpeg\", \"jpg\", \"png\"].indexOf(ext) >= 0) return <FaImage />;\r\n  if (ext === \"pdf\") return <FaFilePdf />;\r\n\r\n  return <FaFile />;\r\n};\r\n\r\nclass AttachmentCard extends Component {\r\n  colProps = { xs: \"12\", sm: \"12\", md: \"6\", lg: \"4\", xl: \"3\" };\r\n\r\n  state = { showModalDelete: false };\r\n  showModalDelete = () => {\r\n    this.setState({ showModalDelete: !this.state.showModalDelete });\r\n  };\r\n\r\n  handleDelete = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    };\r\n    return axios\r\n      .delete(`${attachmentRemoveAPI}${this.props.id}`, headers)\r\n      .then(res => {\r\n        this.props.removeAttFromState(this.props.id);\r\n      })\r\n      .catch(error => this.props.error(error));\r\n  };\r\n\r\n  doesCurrentUserOwnThisAttachment = () => {\r\n    return this.props.currentUser.id === this.props.owner;\r\n  };\r\n\r\n  download = () => {\r\n    // thanks to https://gist.github.com/javilobo8/097c30a233786be52070986d8cdb1743\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    };\r\n    axios({\r\n      url: `${attachmentGetAPI}${this.props.id}`,\r\n      ...headers,\r\n      method: 'GET',\r\n      responseType: 'blob', // important\r\n    }).then((response) => {\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', this.props.name);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n    }).catch(error => this.props.error(error));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"attachment-card\">\r\n          <span onClick={this.download}>\r\n            <span className=\"mr-2\">{getIcon(this.props.name)}</span>\r\n            {this.props.name}\r\n          </span>\r\n          {this.doesCurrentUserOwnThisAttachment() && (\r\n            <Button className=\"ml-2\" variant=\"plain\" onClick={this.showModalDelete}>\r\n              <FaTimes />\r\n            </Button>\r\n          )}\r\n        </div>\r\n        <ConfirmModal show={this.state.showModalDelete} onHide={this.showModalDelete} onClick={this.handleDelete} />\r\n      </Fragment >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.currentUser\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    error: error => dispatch(alertActions.error(error))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AttachmentCard);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { attachmentCreateAPI } from \"../../server\";\r\nimport { connect } from \"react-redux\";\r\nimport * as alertActions from \"../../actions/alerts\";\r\nimport AttachmentCard from \"./AttachmentCard\";\r\n\r\nclass AttachmentManager extends Component {\r\n  state = { file: null };\r\n\r\n  handleFileChange = e => {\r\n    this.setState({ file: e.target.files[0] });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const file = this.state.file;\r\n    if (file) {\r\n      let form_data = new FormData();\r\n      form_data.append(\"file\", file, file.name);\r\n      const token = localStorage.getItem(\"token\");\r\n      const headers = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorization: `Token ${token}`\r\n        }\r\n      };\r\n\r\n      return axios\r\n        .post(`${attachmentCreateAPI}${this.props.group.id}`, form_data, headers)\r\n        .then(res => {\r\n          this.props.addAttToState(res.data);\r\n          this.setState({ file: null });\r\n          document.getElementById(\"file\").value = \"\";\r\n        })\r\n        .catch(error => {\r\n          this.props.error(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  renderCards = () => {\r\n    let buffer = [];\r\n    this.props.group.attachments.forEach(att =>\r\n      buffer.push(\r\n        <AttachmentCard\r\n          key={att.id}\r\n          {...att}\r\n          addAttToState={this.addAttToState}\r\n          removeAttFromState={this.props.removeAttFromState}\r\n        />\r\n      )\r\n    );\r\n    return <div style={{ display: \"flex\", flexWrap: \"wrap\", margin: \"20px\" }}>{buffer}</div>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {this.renderCards()}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group controlId=\"file\">\r\n            <Form.Label>Carica file</Form.Label>\r\n            <Form.Control type=\"file\" onChange={this.handleFileChange} />\r\n          </Form.Group>\r\n          <Button type=\"submit\">Aggiungi</Button>\r\n        </Form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    error: error => dispatch(alertActions.error(error))\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AttachmentManager);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { ActivityManagerDND } from \"../activity\";\r\nimport Panel from \"../../containers/Panel\";\r\nimport AttachmentManager from \"../attachment/AttachmentManager\";\r\n\r\nexport default class GroupPlanning extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Panel\r\n          title=\"Allegati\"\r\n          component={\r\n            <AttachmentManager\r\n              group={this.props.group}\r\n              addAttToState={this.props.addAttToState}\r\n              removeAttFromState={this.props.removeAttFromState}\r\n            />\r\n          }\r\n        />\r\n\r\n        {this.props.dateStart && this.props.dateFinish ? (\r\n          <ActivityManagerDND\r\n            group={this.props.group}\r\n            dateStart={this.props.dateStart}\r\n            dateFinish={this.props.dateFinish}\r\n          />\r\n        ) : (\r\n          <div style={{ textAlign: \"center\", color: \"#777\", fontSize: \"20px\" }}>\r\n            È necessario definire la data di partenza e la data di arrivo per pianificare le attività\r\n          </div>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, ProgressBar } from \"react-bootstrap\";\r\nimport { GroupCardsManager, GroupCreateButton } from \"../components/group\";\r\nimport Panel from \"../containers/Panel\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { groupAPI } from \"../server\";\r\nimport * as alertActions from \"../actions/alerts\";\r\n\r\nclass HomePage extends Component {\r\n  _isMounted = false;\r\n\r\n  state = {\r\n    loading: true,\r\n    groups: [],\r\n  };\r\n\r\n  addGroup = (group) => {\r\n    this.setState({ groups: [...this.state.groups, group] });\r\n  };\r\n\r\n  getGroups = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`,\r\n      },\r\n    };\r\n    return axios\r\n      .get(`${groupAPI}`, headers)\r\n      .then((res) => {\r\n        if (this._isMounted) this.setState({ loading: false, groups: res.data });\r\n      })\r\n      .catch((error) => {\r\n        this.props.error(error);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.getGroups();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.props.currentUser.loading ? (\r\n          <ProgressBar striped variant=\"success\" now={100} animated />\r\n        ) : (\r\n          <Panel\r\n            title=\"Home\"\r\n            component={<GroupCardsManager {...this.state} />}\r\n            badge={<GroupCreateButton addGroup={this.addGroup} />}\r\n          />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.currentUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    error: (error) => dispatch(alertActions.error(error)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Title } from \"../components/misc\";\r\nimport { isAuthenticated } from \"../routes\";\r\n\r\nclass LandingPage extends Component {\r\n  divStyle = {\r\n    marginBottom: \"20px\"\r\n  };\r\n\r\n  colProps = {\r\n    xs: \"12\",\r\n    sm: \"12\",\r\n    md: \"6\",\r\n    lg: \"6\",\r\n    xl: \"6\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated()) {\r\n      this.props.history.push(\"/home\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col>\r\n            <div style={this.divStyle}>\r\n              <Title fontSize=\"110px\" />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col {...this.colProps}>\r\n            <div style={this.divStyle}>{this.props.form()}</div>\r\n          </Col>\r\n          <Col {...this.colProps}>\r\n            <div style={this.divStyle}>\r\n              <h3 className=\"display-4\">Contatta i tuoi amici e organizza splendide vacanze!</h3>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(LandingPage);\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport * as currentUserActions from \"../../actions/currentUser\";\r\n\r\nclass SettingsUser extends Component {\r\n  state = {\r\n    picture: null\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const username = form.username.value;\r\n    const email = form.email.value;\r\n    const first_name = form.first_name.value;\r\n    const last_name = form.last_name.value;\r\n    const picture = this.state.picture;\r\n    this.props.putCurrentUser(username, email, first_name, last_name, picture);\r\n  };\r\n\r\n  handlePictureChange = e => {\r\n    this.setState({ picture: e.target.files[0] });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Form.Group controlId=\"username\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control type=\"text\" defaultValue={this.props.currentUser.username} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control type=\"text\" defaultValue={this.props.currentUser.email} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"first_name\">\r\n          <Form.Label>Nome</Form.Label>\r\n          <Form.Control type=\"text\" defaultValue={this.props.currentUser.first_name} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"last_name\">\r\n          <Form.Label>Cognome</Form.Label>\r\n          <Form.Control type=\"text\" defaultValue={this.props.currentUser.last_name} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"picture\">\r\n          <Form.Label>Immagine profilo</Form.Label>\r\n          <Form.Control type=\"file\" accept=\"image/png, image/jpeg\" onChange={this.handlePictureChange} />\r\n        </Form.Group>\r\n        <Button type=\"submit\">Modifica</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    putCurrentUser: (username, email, first_name, last_name, picture) =>\r\n      dispatch(currentUserActions.putCurrentUser(username, email, first_name, last_name, picture))\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SettingsUser);\r\n","import React, { Component } from \"react\";\r\nimport { Button, OverlayTrigger, Popover, Spinner } from \"react-bootstrap\";\r\nimport { FaUserFriends, FaRedo, FaCircle } from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\nimport * as friendRequestActions from \"../../actions/friendRequest\";\r\nimport { FriendRequestItem } from \".\";\r\n\r\nclass FriendRequestButton extends Component {\r\n  state = {\r\n    loading: true,\r\n    receivedRequests: []\r\n  };\r\n\r\n  updateRrInState = () => {\r\n    if (this.props.friendRequests.receivedRequests)\r\n      this.setState({ receivedRequests: this.props.friendRequests.receivedRequests });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateRrInState();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.friendRequests !== this.props.friendRequests) {\r\n      this.setState({ loading: this.props.friendRequests.loading });\r\n      this.updateRrInState();\r\n    }\r\n  }\r\n\r\n  updateList = () => {\r\n    this.setState({ loading: true });\r\n    this.props.loadRequests().then(this.setState({ loading: false }));\r\n  };\r\n\r\n  listRequests = () => {\r\n    const receivedRequests = this.props.friendRequests.receivedRequests;\r\n    let buffer = [];\r\n    if (receivedRequests.length !== 0) {\r\n      receivedRequests.forEach(rr => buffer.push(<FriendRequestItem key={rr.id} {...rr} />));\r\n      return (\r\n        <table style={{ tableLayout: \"fixed\", width: \"100%\" }}>\r\n          <tbody>{buffer}</tbody>\r\n        </table>\r\n      );\r\n    } else {\r\n      return <div style={{ textAlign: \"center\" }}>Non ci sono richieste</div>;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const popover = (\r\n      <Popover>\r\n        <Popover.Title as=\"h3\">\r\n          Richieste di amicizia{\" \"}\r\n          {this.state.loading ? (\r\n            <Spinner className=\"float-right\" size=\"sm\" animation=\"border\" />\r\n          ) : (\r\n            <div className=\"float-right ml-3\" onClick={this.updateList}>\r\n              <FaRedo style={{ marginTop: \"-10px\" }} />\r\n            </div>\r\n          )}\r\n        </Popover.Title>\r\n        <Popover.Content>{this.listRequests()}</Popover.Content>\r\n      </Popover>\r\n    );\r\n\r\n    return (\r\n      <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\r\n        <Button variant=\"plain\" className=\"ml-2 mr-2\">\r\n          <FaUserFriends />\r\n          {this.props.friendRequests.receivedRequests.length !== 0 && (\r\n            <FaCircle className=\"mb-2\" size=\"0.6em\" color=\"var(--danger)\" />\r\n          )}\r\n        </Button>\r\n      </OverlayTrigger>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    friendRequests: state.friendRequest\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loadRequests: () => dispatch(friendRequestActions.loadRequests())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendRequestButton);\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { FaUserMinus } from \"react-icons/fa\";\r\n\r\nexport default function RemoveButton(props) {\r\n  return (\r\n    <Button variant=\"danger\" onClick={props.onClick}>\r\n      <FaUserMinus /> Rimuovi\r\n    </Button>\r\n  );\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { isAuthenticated } from \"../../routes\";\r\nimport { connect } from \"react-redux\";\r\nimport * as alertActions from \"../../actions/alerts\";\r\nimport * as friendRequestActions from \"../../actions/friendRequest\";\r\nimport * as currentUserActions from \"../../actions/currentUser\";\r\nimport axios from \"axios\";\r\nimport { unfriendAPI } from \"../../server\";\r\nimport { AcceptRefuseButtons, WaitButton, AddButton } from \".\";\r\nimport RemoveButton from \"./RemoveButton\";\r\n\r\nclass FriendUnfriendButtons extends Component {\r\n  state = {\r\n    sent: false,\r\n    received: false,\r\n    requestId: null,\r\n    friend: false\r\n  };\r\n\r\n  checkSentReceived = () => {\r\n    if (!this.props.friendRequests.loading) {\r\n      const friendRequests = this.props.friendRequests;\r\n      const profile = this.props.profile;\r\n      let { sent, received } = false;\r\n      let requestId = null;\r\n      if (friendRequests.sentRequests) {\r\n        sent = friendRequests.sentRequests.find(req => req.receiver.id === profile.id);\r\n        if (sent) requestId = sent.id;\r\n        sent = Boolean(sent);\r\n      }\r\n      if (friendRequests.receivedRequests) {\r\n        received = friendRequests.receivedRequests.find(req => req.sender.id === profile.id);\r\n        if (received) requestId = received.id;\r\n        received = Boolean(received);\r\n      }\r\n      this.setState({ sent, received, requestId });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.checkSentReceived();\r\n    this.isAlreadyFriend();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevProps.friendRequests.loading !== this.props.friendRequests.loading ||\r\n      prevProps.currentUser.loading !== this.props.currentUser.loading\r\n    ) {\r\n      this.checkSentReceived();\r\n      this.isAlreadyFriend();\r\n    }\r\n  }\r\n\r\n  isAlreadyFriend = () => {\r\n    let friend = null;\r\n    if (!this.props.currentUser.loading) {\r\n      const friends = this.props.currentUser.profile.friends;\r\n      if (friends) {\r\n        friend = friends.find(element => {\r\n          return element.id === this.props.profile.id;\r\n        });\r\n      }\r\n      this.setState({ friend: Boolean(friend) });\r\n    }\r\n  };\r\n\r\n  sendFriendRequest = () => {\r\n    const senderId = this.props.currentUser.id;\r\n    const receiverId = this.props.profile.id;\r\n    this.props.sendRequest(senderId, receiverId).then(this.setState({ sent: true, received: false }));\r\n  };\r\n\r\n  acceptOrRefuseFriendRequest = status => {\r\n    if (![\"Acc\", \"Ref\"].includes(status)) return;\r\n    const senderId = this.props.profile.id;\r\n    const receiverId = this.props.currentUser.id;\r\n    const requestId = this.state.requestId;\r\n    this.props.respondRequest(requestId, senderId, receiverId, status).then(() => {\r\n      status === \"Acc\" && this.props.addFriendToStore(this.props.profile);\r\n      this.setState({\r\n        sent: false,\r\n        received: false,\r\n        requestId: null,\r\n        friend: status === \"Acc\" ? true : false\r\n      });\r\n    });\r\n  };\r\n\r\n  unfriend = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    };\r\n    return axios.delete(`${unfriendAPI}${this.props.profile.id}`, headers).catch(error => this.props.error(error));\r\n  };\r\n\r\n  removeFriend = () => {\r\n    this.unfriend().then(() => {\r\n      this.props.removeFriendFromStore(this.props.profile);\r\n      this.setState({ friend: false });\r\n    });\r\n  };\r\n\r\n  renderFriendButton = () => {\r\n    return (\r\n      <Fragment>\r\n        {this.state.sent && <WaitButton />}\r\n        {this.state.received && <AcceptRefuseButtons compact={false} onClick={this.acceptOrRefuseFriendRequest} />}\r\n        {!this.state.sent && !this.state.received && <AddButton onClick={this.sendFriendRequest} />}\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  renderUnfriendButton = () => {\r\n    return <RemoveButton onClick={this.removeFriend} />;\r\n  };\r\n\r\n  renderButtons = () => {\r\n    if (isAuthenticated() && this.props.profile.id !== this.props.currentUser.id) {\r\n      return <span>{this.state.friend ? this.renderUnfriendButton() : this.renderFriendButton()}</span>;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <span>{!this.props.friendRequests.loading && this.renderButtons()}</span>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    friendRequests: state.friendRequest\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    error: error => dispatch(alertActions.error(error)),\r\n    sendRequest: (senderId, receiverId) => dispatch(friendRequestActions.sendRequest(senderId, receiverId)),\r\n    respondRequest: (requestId, senderId, receiverId, status) =>\r\n      dispatch(friendRequestActions.respondRequest(requestId, senderId, receiverId, status)),\r\n    addFriendToStore: friend => dispatch(currentUserActions.addFriendToStore(friend)),\r\n    removeFriendFromStore: friend => dispatch(currentUserActions.removeFriendFromStore(friend))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendUnfriendButtons);\r\n","import React from \"react\";\r\nimport { ButtonGroup, Button } from \"react-bootstrap\";\r\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\r\n\r\nexport default function AcceptRefuseButtons(props) {\r\n  return (\r\n    <ButtonGroup>\r\n      <Button variant=\"success\" onClick={() => props.onClick(\"Acc\")} size={props.size}>\r\n        <FaCheck />\r\n        {!props.compact && \" Accetta\"}\r\n      </Button>\r\n      <Button variant=\"warning\" onClick={() => props.onClick(\"Ref\")} size={props.size}>\r\n        <FaTimes />\r\n        {!props.compact && \" Rifiuta\"}\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n\r\nexport default function AddButton(props) {\r\n  return (\r\n    <Button variant=\"primary\" onClick={props.onClick}>\r\n      <FaUserPlus /> Aggiungi\r\n    </Button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { FaUserClock } from \"react-icons/fa\";\r\n\r\nexport default function WaitButton() {\r\n  return (\r\n    <Button variant=\"info\" disabled>\r\n      <FaUserClock /> Attesa\r\n    </Button>\r\n  );\r\n}\r\n","import React, { Fragment, Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AcceptRefuseButtons } from \".\";\r\nimport { connect } from \"react-redux\";\r\nimport * as friendRequestActions from \"../../actions/friendRequest\";\r\nimport * as currentUserActions from \"../../actions/currentUser\";\r\n\r\nclass FriendRequestItem extends Component {\r\n  acceptOrRefuseFriendRequest = status => {\r\n    if (![\"Acc\", \"Ref\"].includes(status)) return;\r\n    const senderId = this.props.sender.id;\r\n    const receiverId = this.props.receiver.id;\r\n    const requestId = this.props.id;\r\n    this.props.respondRequest(requestId, senderId, receiverId, status).then(() => {\r\n      status === \"Acc\" && this.props.addFriendToStore(this.props.sender);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <tr style={{ height: \"50px\" }}>\r\n          <td onClick={() => this.props.history.push(`/profile/${this.props.sender.username}`)}>\r\n            <div style={{ fontWeight: \"bold\" }}>{this.props.sender.username}</div> {this.props.sender.first_name}{\" \"}\r\n            {this.props.sender.last_name}\r\n          </td>\r\n          <td style={{ textAlign: \"right\" }}>\r\n            <AcceptRefuseButtons compact={true} size=\"sm\" onClick={this.acceptOrRefuseFriendRequest} />\r\n          </td>\r\n        </tr>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    respondRequest: (requestId, senderId, receiverId, status) =>\r\n      dispatch(friendRequestActions.respondRequest(requestId, senderId, receiverId, status)),\r\n    addFriendToStore: friend => dispatch(currentUserActions.addFriendToStore(friend))\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(FriendRequestItem));\r\n","import React, { Component } from \"react\";\r\nimport { Container, Image } from \"react-bootstrap\";\r\nimport { FriendUnfriendButtons } from \"../friend_request\";\r\n\r\nimport logo from \"../../assets/imgs/logo.png\";\r\n\r\nclass UserProfileManager extends Component {\r\n  imageSize = 200;\r\n\r\n  rowStyle = {\r\n    marginTop: \"20px\"\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <Image\r\n            src={this.props.profile.profile.picture ? this.props.profile.profile.picture : logo}\r\n            className=\"profile-pic-big\"\r\n          />\r\n          <h1 className=\"display-4\">\r\n            {this.props.profile.first_name} {this.props.profile.last_name}\r\n          </h1>\r\n          <FriendUnfriendButtons {...this.props} />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfileManager;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Container, ProgressBar, Badge, Row, Col } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Panel from \"./Panel\";\r\nimport { FriendBallsManager } from \"../components/friend\";\r\nimport { UserProfileManager } from \"../components/profile\";\r\nimport { IdeaCardManager, IdeaCreateButton } from \"../components/idea\";\r\nimport * as alertActions from \"../actions/alerts\";\r\nimport * as currentUserActions from \"../actions/currentUser\";\r\nimport axios from \"axios\";\r\nimport { profileAPI, ideaAPI } from \"../server\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Profile extends Component {\r\n  state = {\r\n    loading: true,\r\n    profile: {}\r\n  };\r\n\r\n  addIdeaToState = idea => {\r\n    return new Promise(resolve => {\r\n      let profile = { ...this.state.profile };\r\n      profile.profile.ideas = [...profile.profile.ideas, idea];\r\n      this.setState({ profile: profile });\r\n      resolve();\r\n    });\r\n  };\r\n\r\n  updateIdeaInState = idea => {\r\n    return new Promise(resolve => {\r\n      let profile = { ...this.state.profile };\r\n      let ideas = [...this.state.profile.profile.ideas];\r\n      let index = ideas.findIndex(idea_ => {\r\n        // eslint-disable-next-line\r\n        return idea_.id == idea.id;\r\n      });\r\n      if (index > -1) {\r\n        ideas[index] = idea;\r\n        profile.profile.ideas = ideas;\r\n        this.setState({ profile: profile });\r\n      }\r\n      resolve();\r\n    });\r\n  };\r\n\r\n  deleteIdea = ideaId => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    };\r\n    return axios\r\n      .delete(`${ideaAPI}${ideaId}/`, headers)\r\n      .then(res => {\r\n        this.removeIdeaFromState(ideaId);\r\n        this.props.removeIdeaFromStore(ideaId);\r\n      })\r\n      .catch(error => {\r\n        this.props.error(error);\r\n      });\r\n  };\r\n\r\n  removeIdeaFromState = ideaId => {\r\n    let profile = { ...this.state.profile };\r\n    profile.profile.ideas = profile.profile.ideas.filter(idea => {\r\n      return idea.id !== ideaId;\r\n    });\r\n    this.setState({ profile: profile });\r\n  };\r\n\r\n  getProfile = () => {\r\n    this.setState({ loading: true });\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    };\r\n    return axios\r\n      .get(`${profileAPI}${this.props.match.params.username}`, headers)\r\n      .then(res => {\r\n        this.setState({ loading: false, profile: res.data });\r\n      })\r\n      .catch(error => {\r\n        this.props.error(error);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevUsername = prevProps.match.params.username;\r\n    const username = this.props.match.params.username;\r\n    if (prevUsername !== username) {\r\n      this.getProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.state.loading ? (\r\n          <ProgressBar striped variant=\"success\" now={100} animated />\r\n        ) : (\r\n          <Fragment>\r\n            <Row>\r\n              <Col xs={12} sm={12} md={4} lg={4} xl={4}>\r\n                <Panel\r\n                  title={this.state.profile.username}\r\n                  component={<UserProfileManager profile={this.state.profile} currentUser={this.props.currentUser} />}\r\n                />\r\n                <Panel\r\n                  title=\"Amici\"\r\n                  badge={\r\n                    <Badge pill variant=\"primary\">\r\n                      {this.state.profile.profile.friends.length}\r\n                    </Badge>\r\n                  }\r\n                  component={<FriendBallsManager friends={this.state.profile.profile.friends} />}\r\n                />\r\n              </Col>\r\n              <Col xs={12} sm={12} md={8} lg={8} xl={8}>\r\n                <Panel\r\n                  title=\"Idee\"\r\n                  component={\r\n                    <IdeaCardManager\r\n                      ideas={this.state.profile.profile.ideas}\r\n                      deleteIdea={this.deleteIdea}\r\n                      updateIdeaInState={this.updateIdeaInState}\r\n                    />\r\n                  }\r\n                  badge={\r\n                    <Fragment>\r\n                      {this.props.currentUser.username === this.props.match.params.username && (\r\n                        <IdeaCreateButton addIdeaToState={this.addIdeaToState} />\r\n                      )}\r\n                    </Fragment>\r\n                  }\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Fragment>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.currentUser\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    removeIdeaFromStore: ideaId => dispatch(currentUserActions.removeIdeaFromStore(ideaId)),\r\n    error: error => dispatch(alertActions.error(error))\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Profile));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { ProgressBar, Container, Nav } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\nimport { groupAPI, groupCreatorAPI } from \"../server\";\r\nimport { connect } from \"react-redux\";\r\nimport * as alertActions from \"../actions/alerts\";\r\nimport { GroupDesign, GroupPlanning } from \"../components/group\";\r\n\r\nimport { stringToDate_or_Null } from \"../dateUtils\";\r\n\r\nclass GroupDetail extends Component {\r\n  state = {\r\n    loading: true,\r\n    group: {},\r\n    selectedFriends: [],\r\n    dateStart: null,\r\n    dateFinish: null,\r\n    phase: 0, // should be 0 for \"ideazione\" and 1 for \"planning\"\r\n  };\r\n\r\n  setDateStart = date => this.setState({ dateStart: date });\r\n  setDateFinish = date => this.setState({ dateFinish: date });\r\n\r\n  componentDidMount() {\r\n    this.getGroup().then(() => {\r\n      const { dateStart, dateFinish } = this.state;\r\n      const prefered_idea = this.state.group.prefered_idea;\r\n      if (prefered_idea && dateStart && dateFinish) {\r\n        this.setState({ phase: 1 });\r\n      }\r\n    });\r\n  }\r\n\r\n  getGroup = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`,\r\n      },\r\n    };\r\n    const id = this.props.match.params.id;\r\n    return axios\r\n      .get(`${groupAPI}${id}/`, headers)\r\n      .then(res => {\r\n        let selectedFriends = [];\r\n        res.data.profiles.forEach(profile => selectedFriends.push(profile.id));\r\n        this.setState({\r\n          loading: false,\r\n          group: res.data,\r\n          selectedFriends: selectedFriends,\r\n          dateStart: stringToDate_or_Null(res.data.date_start),\r\n          dateFinish: stringToDate_or_Null(res.data.date_finish),\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.props.error(error);\r\n      });\r\n  };\r\n\r\n  isCurrentUserAPartecipant = group => {\r\n    if (group.profiles) {\r\n      return Boolean(group.profiles.find(profile => profile.id === this.props.currentUser.id));\r\n    }\r\n  };\r\n\r\n  putGroup = (name, description, profiles, ideas = [], dateStart, dateFinish) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`,\r\n      },\r\n    };\r\n    const data = {\r\n      name,\r\n      description,\r\n      profiles,\r\n      ideas, //: ideas.length === 0 ? this.state.group.ideas.map(idea => idea.id) : ideas, // fixed deleting ideas\r\n      date_start: dateStart,\r\n      date_finish: dateFinish,\r\n    };\r\n    return axios\r\n      .put(`${groupAPI}${this.state.group.id}/`, data, headers)\r\n      .then(res => {\r\n        this.setState({ group: res.data });\r\n        // checking if a user deleted himself from the group\r\n        if (!this.isCurrentUserAPartecipant(res.data)) {\r\n          this.props.addAlert(`Non fai più parte del gruppo ${this.props.name}.`, \"warning\");\r\n          this.props.history.push(\"/home\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        this.props.error(error);\r\n        return error;\r\n      });\r\n  };\r\n\r\n  deleteGroup = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`,\r\n      },\r\n    };\r\n    return axios\r\n      .delete(`${groupCreatorAPI}${this.state.group.id}/`, headers)\r\n      .then(res => {\r\n        this.props.history.push(\"/home\");\r\n      })\r\n      .catch(error => {\r\n        this.props.error(error);\r\n      });\r\n  };\r\n\r\n  deselectFriend = id => {\r\n    var array = [...this.state.selectedFriends];\r\n    var index = array.indexOf(id);\r\n    if (index !== -1) {\r\n      array.splice(index, 1);\r\n      this.setState({ selectedFriends: array });\r\n    }\r\n  };\r\n\r\n  selectFriend = id => {\r\n    if (this.state.selectedFriends.includes(id)) {\r\n      this.deselectFriend(id);\r\n    } else {\r\n      this.setState({ selectedFriends: [...this.state.selectedFriends, id] });\r\n    }\r\n  };\r\n\r\n  getCleanDataForPutGroup = () => {\r\n    let group = { ...this.state.group };\r\n    if (group.profiles) group.profiles = group.profiles.map(profile => profile.id);\r\n    if (group.ideas) group.ideas = group.ideas.map(idea => idea.id);\r\n    return group;\r\n  };\r\n\r\n  removeIdeaFromGroup = ideaId => {\r\n    let group = this.getCleanDataForPutGroup();\r\n    group.ideas = group.ideas.filter(idea => idea !== ideaId);\r\n    const { name, description, profiles, ideas } = group;\r\n    return this.putGroup(name, description, profiles, ideas);\r\n  };\r\n\r\n  updateIdeaInState = idea => {\r\n    return new Promise(resolve => {\r\n      let group = this.state.group;\r\n      let ideas = [...this.state.group.ideas];\r\n      let index = ideas.findIndex(idea_ => idea_.id === idea.id);\r\n      if (index > -1) {\r\n        ideas[index] = idea;\r\n        group.ideas = ideas;\r\n        this.setState({ group: group });\r\n      }\r\n      resolve();\r\n    });\r\n  };\r\n\r\n  addIdeaToState = idea => {\r\n    let group = this.state.group;\r\n    group.ideas.push(idea);\r\n    this.setState({ group });\r\n\r\n    // add to group\r\n    let group_ = this.getCleanDataForPutGroup();\r\n    const { name, description, profiles, ideas } = group_;\r\n    return this.putGroup(name, description, profiles, ideas);\r\n  };\r\n\r\n  addIdeaIdsListForPutGroup = ideasToAdd => {\r\n    if (ideasToAdd.length !== 0) {\r\n      let group = this.getCleanDataForPutGroup();\r\n      group.ideas = [...group.ideas, ...ideasToAdd];\r\n      const { name, description, profiles, ideas } = group;\r\n      return this.putGroup(name, description, profiles, ideas);\r\n    }\r\n  };\r\n\r\n  removeAttFromState = id => {\r\n    const attachments = this.state.group.attachments.filter(att => att.id !== id);\r\n    this.setState({\r\n      group: {\r\n        ...this.state.group,\r\n        attachments,\r\n      },\r\n    });\r\n  };\r\n\r\n  addAttToState = att => {\r\n    const attachments = [...this.state.group.attachments, att];\r\n    this.setState({\r\n      group: {\r\n        ...this.state.group,\r\n        attachments,\r\n      },\r\n    });\r\n  };\r\n\r\n  putFavIdea = ideaId => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`,\r\n      },\r\n    };\r\n    const data = {\r\n      prefered_idea: ideaId,\r\n    };\r\n    return axios\r\n      .put(`${groupCreatorAPI}${this.state.group.id}/`, data, headers)\r\n      .then(res => {\r\n        let group = this.state.group;\r\n        group.prefered_idea = res.data.prefered_idea;\r\n        this.setState({ group: group });\r\n      })\r\n      .catch(error => {\r\n        this.props.error(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.state.loading ? (\r\n          <ProgressBar striped variant=\"success\" now={100} animated />\r\n        ) : (\r\n          <Fragment>\r\n            <Nav style={{ marginTop: \"10px\" }} justify variant=\"tabs\">\r\n              <Nav.Item>\r\n                <Nav.Link onClick={() => this.setState({ phase: 0 })}>Ideazione</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={() => this.setState({ phase: 1 })}>Pianificazione</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n            {this.state.phase === 0 ? (\r\n              <GroupDesign\r\n                group={this.state.group}\r\n                selectFriend={this.selectFriend}\r\n                selectedFriends={this.state.selectedFriends}\r\n                putGroup={this.putGroup}\r\n                deleteGroup={this.deleteGroup}\r\n                dateStart={this.state.dateStart}\r\n                dateFinish={this.state.dateFinish}\r\n                setDateStart={this.setDateStart}\r\n                setDateFinish={this.setDateFinish}\r\n                removeIdeaFromGroup={this.removeIdeaFromGroup}\r\n                updateIdeaInState={this.updateIdeaInState}\r\n                addIdeaToState={this.addIdeaToState}\r\n                addIdeaIdsListForPutGroup={this.addIdeaIdsListForPutGroup}\r\n                putFavIdea={this.putFavIdea}\r\n              />\r\n            ) : (\r\n              <GroupPlanning\r\n                addAttToState={this.addAttToState}\r\n                removeAttFromState={this.removeAttFromState}\r\n                group={this.state.group}\r\n                dateStart={this.state.dateStart}\r\n                dateFinish={this.state.dateFinish}\r\n              />\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.currentUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    error: error => dispatch(alertActions.error(error)),\r\n    addAlert: (text, style) => dispatch(alertActions.addAlert(text, style)),\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GroupDetail));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Container, ProgressBar } from \"react-bootstrap\";\r\nimport Panel from \"./Panel\";\r\nimport { SettingsUser } from \"../components/profile\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Settings extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Container>\r\n          {this.props.currentUser.loading ? (\r\n            <ProgressBar striped variant=\"success\" now={100} animated />\r\n          ) : (\r\n            <Panel title=\"Impostazioni utente\" component={<SettingsUser currentUser={this.props.currentUser} />} />\r\n          )}\r\n        </Container>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.currentUser\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Settings);\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst AccessFormCard = props => {\r\n  const cardStyle = {\r\n    backgroundColor: \"var(--holpoint-yellow)\",\r\n  };\r\n\r\n  return (\r\n    <Card style={cardStyle} className=\"card-login\">\r\n      {props.children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AccessFormCard;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Card, Button, Spinner } from \"react-bootstrap\";\r\nimport AccessFormCard from \"./AccessFormCard\";\r\n\r\nimport * as authActions from \"../../actions/auth\";\r\nimport * as alertActions from \"../../actions/alerts\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { resetPassword } from \"../../server\";\r\nimport \"./style.css\";\r\n\r\nclass LoginForm extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const username = form.username.value;\r\n    const password = form.password.value;\r\n    this.props.onAuth(username, password).then(err => {\r\n      if (!err) {\r\n        this.props.history.push(\"/home\");\r\n        this.props.removeAllAlerts();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <AccessFormCard>\r\n        <Card.Header>\r\n          <h1 className=\"display-4\">Log In</h1>\r\n        </Card.Header>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Card.Body>\r\n            <Form.Group controlId=\"username\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"user_name\" />\r\n              <Form.Control.Feedback>ciao</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" placeholder=\"mysecretpassword\" />\r\n            </Form.Group>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            {this.props.loading ? (\r\n              <Button variant=\"primary\" disabled>\r\n                <Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" /> Accesso\r\n              </Button>\r\n            ) : (\r\n              <Button type=\"submit\">Accedi</Button>\r\n            )}\r\n            <span className=\"forgot-password ml-2\">\r\n              <a href={resetPassword}>Password dimenticata?</a>\r\n            </span>\r\n          </Card.Footer>\r\n        </Form>\r\n      </AccessFormCard>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (username, password) => dispatch(authActions.authLogin(username, password)),\r\n    removeAllAlerts: () => dispatch(alertActions.removeAllAlerts())\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginForm));\r\n","import React, { Component } from \"react\";\r\nimport { Form, Card, Button, Col, Spinner } from \"react-bootstrap\";\r\nimport AccessFormCard from \"./AccessFormCard\";\r\n\r\nimport * as authActions from \"../../actions/auth\";\r\nimport * as alertActions from \"../../actions/alerts\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass SignupForm extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const username = form.username.value;\r\n    const email = form.email.value;\r\n    const password1 = form.password1.value;\r\n    const password2 = form.password2.value;\r\n    this.props.onAuth(username, email, password1, password2).then(err => {\r\n      if (!err) {\r\n        this.props.history.push(\"/home\");\r\n        this.props.removeAllAlerts();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <AccessFormCard>\r\n        <Card.Header>\r\n          <h1 className=\"display-4\">Sign Up</h1>\r\n        </Card.Header>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Card.Body>\r\n            <Form.Group controlId=\"username\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"user_name\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"email@email.com\" />\r\n            </Form.Group>\r\n            <Form.Row>\r\n              <Form.Group controlId=\"password1\" as={Col} xs={12} sm={12} md={12} lg={6}>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"mysecretpassword\" />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password2\" as={Col} xs={12} sm={12} md={12} lg={6}>\r\n                <Form.Label>Conferma</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"mysecretpassword\" />\r\n              </Form.Group>\r\n            </Form.Row>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            {this.props.loading ? (\r\n              <Button variant=\"primary\" disabled>\r\n                <Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" /> Registrazione\r\n              </Button>\r\n            ) : (\r\n              <Button type=\"submit\">Registrati</Button>\r\n            )}\r\n          </Card.Footer>\r\n        </Form>\r\n      </AccessFormCard>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (username, email, password1, password2) =>\r\n      dispatch(authActions.authSignup(username, email, password1, password2)),\r\n    removeAllAlerts: () => dispatch(alertActions.removeAllAlerts())\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SignupForm));\r\n","import React, { Component } from \"react\";\r\nimport \"../assets/css/font.css\";\r\n\r\nexport default class NotFound404 extends Component {\r\n  style = {\r\n    fontFamily: \"'Rancho', cursive\",\r\n    textAlign: \"center\",\r\n    marginTop: \"60px\",\r\n    marginBottom: \"-20px\"\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={this.style}>\r\n        <div style={{ fontSize: \"100px\", color: \"var(--holpoint-blue)\" }}>404</div>\r\n        <div style={{ fontSize: \"50px\", color: \"var(--holpoint-red)\" }}>not found :(</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\n// import requireAuth from \"./requireAuth\"; // deprecated\r\n\r\nimport HomePage from \"./containers/HomePage\";\r\nimport LandingPage from \"./containers/LandingPage\";\r\nimport Profile from \"./containers/Profile\";\r\nimport GroupDetail from \"./containers/GroupDetail\";\r\nimport Settings from \"./containers/Settings\";\r\n\r\nimport LoginForm from \"./components/auth/LoginForm\";\r\nimport SignupForm from \"./components/auth/SignupForm\";\r\nimport NotFound404 from \"./containers/NotFound404\";\r\n\r\nexport const isAuthenticated = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token === undefined) {\r\n    return false;\r\n  } else {\r\n    const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n    if (expirationDate <= new Date()) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n};\r\n\r\nconst BaseRouter = props => (\r\n  <div>\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <LandingPage form={() => <LoginForm />} />\r\n      </Route>\r\n      <Route exact path=\"/login\">\r\n        <LandingPage form={() => <LoginForm />} />\r\n      </Route>\r\n      <Route exact path=\"/register\">\r\n        <LandingPage form={() => <SignupForm />} />\r\n      </Route>\r\n      <Route exact path=\"/home\" component={HomePage} />\r\n      <Route exact path=\"/profile/:username\" component={Profile} />\r\n      <Route exact path=\"/group/:id\" component={GroupDetail} />\r\n      <Route exact path=\"/settings\" component={Settings} />\r\n      <Route path=\"*\" component={NotFound404} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default BaseRouter;\r\n","import React, { Component } from \"react\";\r\nimport { Form, FormControl, Popover, OverlayTrigger, Spinner } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { searchAPI } from \"../../server\";\r\nimport { connect } from \"react-redux\";\r\nimport * as alertActions from \"../../actions/alerts\";\r\nimport { SearchResult } from \".\";\r\n\r\nclass SearchBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      results: [],\r\n      loading: false\r\n    };\r\n    this.timeout = 0;\r\n  }\r\n\r\n  doSearch = e => {\r\n    this.setState({ loading: true });\r\n    if (this.timeout) clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      this.getUsers();\r\n    }, 300);\r\n  };\r\n\r\n  isEmptyOrSpaces = str => {\r\n    return str === null || str.match(/^ *$/) !== null;\r\n  };\r\n\r\n  getUsers = () => {\r\n    const username = document.getElementById(\"search-text-field\").value;\r\n    if (this.isEmptyOrSpaces(username)) {\r\n      this.setState({ loading: false });\r\n      return;\r\n    }\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    };\r\n    return axios\r\n      .get(`${searchAPI}${username}`, headers)\r\n      .then(res => this.setState({ results: res.data, loading: false }))\r\n      .catch(error => {\r\n        this.props.error(error);\r\n      });\r\n  };\r\n\r\n  renderResults = () => {\r\n    let buffer = [];\r\n    const { results } = this.state;\r\n    if (results) {\r\n      results.forEach(user => buffer.push(<SearchResult key={user.id} {...user} />));\r\n    }\r\n    return buffer;\r\n  };\r\n\r\n  render() {\r\n    const popover = (\r\n      <Popover style={{ minWidth: \"200px\" }}>\r\n        <Popover.Title as=\"h3\">\r\n          Risultati {this.state.loading && <Spinner className=\"float-right\" size=\"sm\" animation=\"border\" />}\r\n        </Popover.Title>\r\n        {this.state.results.length !== 0 && (\r\n          <Popover.Content>\r\n            <div>{this.renderResults()}</div>\r\n          </Popover.Content>\r\n        )}\r\n      </Popover>\r\n    );\r\n\r\n    return (\r\n      <Form inline autoComplete=\"off\">\r\n        <OverlayTrigger trigger=\"focus\" placement=\"bottom\" overlay={popover}>\r\n          <FormControl\r\n            id=\"search-text-field\"\r\n            type=\"text\"\r\n            placeholder=\"Cerca username\"\r\n            className=\"mr-sm-2\"\r\n            onChange={this.doSearch}\r\n          />\r\n        </OverlayTrigger>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    error: error => dispatch(alertActions.error(error))\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SearchBar);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nexport default withRouter(function SearchResult(props) {\r\n  return (\r\n    <div onClick={() => props.history.push(`/profile/${props.username}`)}>\r\n      <div>\r\n        <span style={{ fontWeight: \"bold\" }}>{props.username}</span> {props.first_name} {props.last_name}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AlertComponent, AlertsOverlayComponent } from \"../components/alerts/index\";\r\nimport { isAuthenticated } from \"../routes\";\r\nimport { Title, LogInSignUp, ProfileButton } from \"../components/misc\";\r\nimport { SearchBar } from \"../components/search\";\r\nimport { FriendRequestButton } from \"../components/friend_request\";\r\n\r\nclass PageLayout extends Component {\r\n  navbarStyle = {\r\n    backgroundColor: \"var(--holpoint-yellow)\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!isAuthenticated()) {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Navbar style={this.navbarStyle} expand=\"lg\">\r\n          <Navbar.Brand to=\"/\">\r\n            <LinkContainer to=\"/\">\r\n              <Navbar.Brand>\r\n                <Title fontSize=\"30px\" />\r\n              </Navbar.Brand>\r\n            </LinkContainer>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle />\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Nav>\r\n              {this.props.isAuthenticated ? (\r\n                <Fragment>\r\n                  <LinkContainer to=\"/home\">\r\n                    <Nav.Link className=\"mr-sm-2\">Home</Nav.Link>\r\n                  </LinkContainer>\r\n                  <Nav.Item>\r\n                    <FriendRequestButton />\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <SearchBar />\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <ProfileButton />\r\n                  </Nav.Item>\r\n                </Fragment>\r\n              ) : (\r\n                <LogInSignUp />\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n        <AlertsOverlayComponent alerts={this.props.alerts}>\r\n          <AlertComponent />\r\n        </AlertsOverlayComponent>\r\n        {this.props.children}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(PageLayout);\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Router } from \"react-router-dom\";\r\nimport BaseRouter from \"./routes\";\r\nimport { connect } from \"react-redux\";\r\nimport PageLayout from \"./containers/PageLayout\";\r\nimport history from \"./history\";\r\n\r\nimport * as authActions from \"./actions/auth\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onTryAutoSignup();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Router history={history}>\r\n          <PageLayout {...this.props}>\r\n            <BaseRouter />\r\n          </PageLayout>\r\n        </Router>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// map the state in some property\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n    username: state.currentUser.username,\r\n    alerts: state.alerts\r\n  };\r\n};\r\n\r\n// authomatic auth check\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(authActions.authCheckState())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties\r\n  };\r\n};\r\n","import * as actionTypes from \"../actions/types\";\r\nimport { updateObject } from \"./utility\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  error: null,\r\n  loading: false\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.token,\r\n    error: null,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n  return updateObject(state, {\r\n    token: null\r\n  });\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state, action);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import * as actionTypes from \"../actions/types\";\r\nimport uuid from \"node-uuid\";\r\n\r\nconst initialState = [];\r\n\r\nconst addAlert = (state, action) => {\r\n  window.scrollTo(0, 0); // scroll top in order to show alert\r\n  return [\r\n    ...state,\r\n    {\r\n      text: action.text,\r\n      style: action.style,\r\n      id: uuid()\r\n    }\r\n  ];\r\n};\r\n\r\nconst removeAlert = (state, action) => {\r\n  return state.filter(alert => {\r\n    if (alert.id === action.id) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  });\r\n};\r\n\r\nconst removeAllAlerts = (state, action) => {\r\n  return initialState;\r\n};\r\n\r\nconst error = (state, action) => {\r\n  addAlert(state, action);\r\n};\r\n\r\nconst alertsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_ALERT:\r\n      return addAlert(state, action);\r\n    case actionTypes.REMOVE_ALERT:\r\n      return removeAlert(state, action);\r\n    case actionTypes.REMOVE_ALL_ALERTS:\r\n      return removeAllAlerts(state, action);\r\n    case actionTypes.ERROR:\r\n      return error(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default alertsReducer;\r\n","import * as actionTypes from \"../actions/types\";\r\nimport { updateObject } from \"./utility\";\r\nimport { server } from \"../server\";\r\n\r\nconst initialState = {\r\n  id: \"\",\r\n  username: \"\",\r\n  first_name: \"\",\r\n  last_name: \"\",\r\n  email: \"\",\r\n  profile: {},\r\n  error: null,\r\n  loading: true\r\n};\r\n\r\nconst getCurrentUserStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst getCurrentUserSuccess = (state, action) => {\r\n  const { id, username, first_name, last_name, email, profile } = action;\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: false,\r\n    id,\r\n    username,\r\n    first_name,\r\n    last_name,\r\n    email,\r\n    profile\r\n  });\r\n};\r\n\r\nconst getCurrentUserFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst getCurrentUserLogout = (state, action) => {\r\n  return updateObject(state, initialState);\r\n};\r\n\r\nconst putCurrentUser = (state, action) => {\r\n  const { username, email, first_name, last_name } = action;\r\n  return updateObject(state, {\r\n    username,\r\n    email,\r\n    first_name,\r\n    last_name\r\n  });\r\n};\r\n\r\nconst loading = (state, action) => {\r\n  return updateObject(state, { loading: true });\r\n};\r\n\r\nconst done = (state, action) => {\r\n  return updateObject(state, { loading: false });\r\n};\r\n\r\nconst addFriendToStore = (state, action) => {\r\n  const friend = action.friend;\r\n  let profile = { ...state.profile };\r\n  profile.friends.push(friend);\r\n  return updateObject(state, { profile });\r\n};\r\n\r\nconst removeFriendFromStore = (state, action) => {\r\n  const friend = action.friend;\r\n  let profile = { ...state.profile };\r\n  profile.friends = profile.friends.filter(f => f.id !== friend.id);\r\n  if (!profile.friends) profile.friends = [];\r\n  return updateObject(state, { profile });\r\n};\r\n\r\nconst pictureUpdate = (state, action) => {\r\n  let profile = { ...state.profile };\r\n  profile.picture = `${server}${action.data.picture}`;\r\n  return updateObject(state, { profile });\r\n};\r\n\r\nconst addIdeaToStore = (state, action) => {\r\n  let ideas = state.profile.ideas;\r\n  ideas.push(action.idea);\r\n  return { ...state, profile: { ...state.profile, ideas } };\r\n};\r\n\r\nconst removeIdeaFromStore = (state, action) => {\r\n  let ideas = state.profile.ideas;\r\n  ideas = ideas.filter(i => i.id !== action.ideaId);\r\n  return {\r\n    ...state,\r\n    profile: {\r\n      ...state.profile,\r\n      ideas: ideas ? ideas : []\r\n    }\r\n  };\r\n};\r\n\r\nconst updateIdeaInStore = (state, action) => {\r\n  let ideas = state.profile.ideas;\r\n  const idea = action.idea;\r\n  const index = ideas.findIndex(idea_ => idea_.id === idea.id);\r\n  if (index > -1) {\r\n    ideas[index] = idea;\r\n    return {\r\n      ...state,\r\n      profile: {\r\n        ...state.profile,\r\n        ideas: ideas\r\n      }\r\n    };\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nconst getCurrentUserReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_CURRENT_USER_START:\r\n      return getCurrentUserStart(state, action);\r\n    case actionTypes.GET_CURRENT_USER_SUCCESS:\r\n      return getCurrentUserSuccess(state, action);\r\n    case actionTypes.GET_CURRENT_USER_FAIL:\r\n      return getCurrentUserFail(state, action);\r\n    case actionTypes.GET_CURRENT_USER_LOGOUT:\r\n      return getCurrentUserLogout(state, action);\r\n    case actionTypes.PUT_CURRENT_USER:\r\n      return putCurrentUser(state, action);\r\n    case actionTypes.LOADING:\r\n      return loading(state, action);\r\n    case actionTypes.DONE:\r\n      return done(state, action);\r\n    case actionTypes.ADD_FRIEND_TO_STORE:\r\n      return addFriendToStore(state, action);\r\n    case actionTypes.REMOVE_FRIEND_FROM_STORE:\r\n      return removeFriendFromStore(state, action);\r\n    case actionTypes.PICTURE_UPDATE:\r\n      return pictureUpdate(state, action);\r\n    case actionTypes.ADD_IDEA_TO_STORE:\r\n      return addIdeaToStore(state, action);\r\n    case actionTypes.REMOVE_IDEA_FROM_STORE:\r\n      return removeIdeaFromStore(state, action);\r\n    case actionTypes.UPDATE_IDEA_IN_STORE:\r\n      return updateIdeaInStore(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default getCurrentUserReducer;\r\n","import { GET_FRIEND_REQUESTS, POST_FRIEND_REQUEST, PUT_FRIEND_REQUEST, CLEAR_FRIEND_REQUESTS } from \"../actions/types\";\r\nimport { updateObject } from \"./utility\";\r\n\r\nconst initialState = {\r\n  sentRequests: [],\r\n  receivedRequests: [],\r\n  loading: true\r\n};\r\n\r\nconst getFriendRequests = (state, action) => {\r\n  const { sent_requests, received_requests } = action.payload;\r\n  return updateObject(state, {\r\n    sentRequests: sent_requests,\r\n    receivedRequests: received_requests,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst postFriendRequest = (state, action) => {\r\n  return updateObject(state, { sentRequests: [...state.sentRequests, action.payload] });\r\n};\r\n\r\nconst putFriendRequest = (state, action) => {\r\n  const { requestId } = action;\r\n  let receivedRequests = state.receivedRequests.filter(fr => fr.id !== requestId);\r\n  if (!receivedRequests) receivedRequests = [];\r\n  return updateObject(state, { receivedRequests });\r\n};\r\n\r\nconst clearFriendRequests = (state, action) => {\r\n  return initialState;\r\n};\r\n\r\nconst friendRequestReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_FRIEND_REQUESTS:\r\n      return getFriendRequests(state, action);\r\n    case POST_FRIEND_REQUEST:\r\n      return postFriendRequest(state, action);\r\n    case PUT_FRIEND_REQUEST:\r\n      return putFriendRequest(state, action);\r\n    case CLEAR_FRIEND_REQUESTS:\r\n      return clearFriendRequests(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default friendRequestReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./auth\";\r\nimport alertsReducer from \"./alerts\";\r\nimport getCurrentUserReducer from \"./currentUser\";\r\nimport friendRequestReducer from \"./friendRequest\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  alerts: alertsReducer,\r\n  currentUser: getCurrentUserReducer,\r\n  friendRequest: friendRequestReducer\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport rootReducer from \"./reducers/index\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./assets/css/font.css\";\r\nimport \"./assets/css/index.css\";\r\n\r\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst initialState = {};\r\nconst store = createStore(rootReducer, initialState, composeEnhances(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.0863de1f.png\";"],"sourceRoot":""}